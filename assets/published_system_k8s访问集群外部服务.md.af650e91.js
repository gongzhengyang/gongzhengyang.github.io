import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.ec8f7e8e.js";const u=JSON.parse('{"title":"需求背景","description":"","frontmatter":{},"headers":[],"relativePath":"published/system/k8s访问集群外部服务.md","filePath":"published/system/k8s访问集群外部服务.md"}'),l={name:"published/system/k8s访问集群外部服务.md"},e=p(`<h1 id="需求背景" tabindex="-1">需求背景 <a class="header-anchor" href="#需求背景" aria-label="Permalink to &quot;需求背景&quot;">​</a></h1><p><code>k8s</code>的集群容器需要访问宿主机的某个服务(<code>mysql</code>或者其他类型的服务)，或者其他外部远程设备的服务，但是服务不在集群当中</p><h2 id="访问外部服务" tabindex="-1">访问外部服务 <a class="header-anchor" href="#访问外部服务" aria-label="Permalink to &quot;访问外部服务&quot;">​</a></h2><p>访问远程外部服务，如下任选一个实现</p><ul><li>外部域名映射到内部<code>service</code></li><li>外部 <code>IP</code> 映射到内部 <code>Service</code></li></ul><p>访问当前<code>Pod</code>所在宿主机服务，如下任选一个实现</p><ul><li>在<code>pod</code>中挂载环境变量表示宿主机的<code>IP</code>，容器内部通过环境变量映射的<code>IP</code>访问服务</li><li>如果是只访问当前宿主机服务，通过创建<code>linux</code>虚拟网桥的访问，指定一个固定的网桥<code>IP</code>，在容器内部访问该<code>IP</code>来实现访问宿主机的效果，也可以叠加外部 <code>IP</code> 映射到内部 <code>Service</code></li></ul><h2 id="外部域名映射到内部service" tabindex="-1">外部域名映射到内部<code>service</code> <a class="header-anchor" href="#外部域名映射到内部service" aria-label="Permalink to &quot;外部域名映射到内部\`service\`&quot;">​</a></h2><p><code>mysql-service.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">mysql</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">externalName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">mysql.example.com</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ExternalName</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">mysql</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">externalName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">mysql.example.com</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ExternalName</span></span></code></pre></div><p>应用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl apply -f mysql-service.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl apply -f mysql-service.yaml</span></span></code></pre></div><p>创建之后，<code>Pod</code> 就可以通过 <code>mysql:3306</code> 访问外部的<code>mysql</code>服务（服务需要存在一个可访问的域名）</p><h2 id="外部-ip-映射到内部-service" tabindex="-1">外部 <code>IP</code> 映射到内部 <code>Service</code> <a class="header-anchor" href="#外部-ip-映射到内部-service" aria-label="Permalink to &quot;外部 \`IP\` 映射到内部 \`Service\`&quot;">​</a></h2><p><code>outer-ip.yaml</code></p><p>注意点</p><ul><li><code>endpoints/service</code>的<code>metadata.name</code>需要保持一致</li><li>如果<code>service</code>配置了端口名称，在<code>endpoints</code>的端口配置也需要配置端口名称，名称保持一致</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Endpoints</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">outer-ip</span></span>
<span class="line"><span style="color:#85E89D;">subsets</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">addresses</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">ip</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">192.168.0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">tcp</span></span>
<span class="line"><span style="color:#B392F0;">---</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">outer-ip</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">tcp</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Endpoints</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">outer-ip</span></span>
<span class="line"><span style="color:#22863A;">subsets</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">addresses</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">ip</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">192.168.0.1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">tcp</span></span>
<span class="line"><span style="color:#6F42C1;">---</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">outer-ip</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">tcp</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span></code></pre></div><p>比如在<code>IP： 192.168.0.1</code>有一个<code>mysql</code>服务，但是服务不是在集群内部的，想通过<code>k8s service</code>访问，就可以创建一个<code>endpoints, service</code>的绑定关系，在集群内部访问<code>outer-ip:3306</code>访问数据库</p><p>应用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl apply -f outer-ip.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl apply -f outer-ip.yaml</span></span></code></pre></div><p>查看<code>endpoints</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl describe endpoints outer-ip</span></span>
<span class="line"><span style="color:#e1e4e8;">Name:         outer-ip</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:    default</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Subsets:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Addresses:          192.168.0.1</span></span>
<span class="line"><span style="color:#e1e4e8;">  NotReadyAddresses:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">  Ports:</span></span>
<span class="line"><span style="color:#e1e4e8;">    Name  Port  Protocol</span></span>
<span class="line"><span style="color:#e1e4e8;">    ----  ----  --------</span></span>
<span class="line"><span style="color:#e1e4e8;">    tcp   3306  TCP</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Events:  &lt;none&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl describe endpoints outer-ip</span></span>
<span class="line"><span style="color:#24292e;">Name:         outer-ip</span></span>
<span class="line"><span style="color:#24292e;">Namespace:    default</span></span>
<span class="line"><span style="color:#24292e;">Labels:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Annotations:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Subsets:</span></span>
<span class="line"><span style="color:#24292e;">  Addresses:          192.168.0.1</span></span>
<span class="line"><span style="color:#24292e;">  NotReadyAddresses:  &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">  Ports:</span></span>
<span class="line"><span style="color:#24292e;">    Name  Port  Protocol</span></span>
<span class="line"><span style="color:#24292e;">    ----  ----  --------</span></span>
<span class="line"><span style="color:#24292e;">    tcp   3306  TCP</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Events:  &lt;none&gt;</span></span></code></pre></div><p>查看<code>service</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl describe svc outer-ip   </span></span>
<span class="line"><span style="color:#e1e4e8;">Name:              outer-ip</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:         default</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:            &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:          &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Type:              ClusterIP</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Family Policy:  SingleStack</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Families:       IPv4</span></span>
<span class="line"><span style="color:#e1e4e8;">IP:                10.43.1.83</span></span>
<span class="line"><span style="color:#e1e4e8;">IPs:               10.43.1.83</span></span>
<span class="line"><span style="color:#e1e4e8;">Port:              tcp  3306/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">TargetPort:        3306/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">Endpoints:         192.168.0.1:3306</span></span>
<span class="line"><span style="color:#e1e4e8;">Session Affinity:  None</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:            &lt;none&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl describe svc outer-ip   </span></span>
<span class="line"><span style="color:#24292e;">Name:              outer-ip</span></span>
<span class="line"><span style="color:#24292e;">Namespace:         default</span></span>
<span class="line"><span style="color:#24292e;">Labels:            &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Annotations:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Selector:          &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Type:              ClusterIP</span></span>
<span class="line"><span style="color:#24292e;">IP Family Policy:  SingleStack</span></span>
<span class="line"><span style="color:#24292e;">IP Families:       IPv4</span></span>
<span class="line"><span style="color:#24292e;">IP:                10.43.1.83</span></span>
<span class="line"><span style="color:#24292e;">IPs:               10.43.1.83</span></span>
<span class="line"><span style="color:#24292e;">Port:              tcp  3306/TCP</span></span>
<span class="line"><span style="color:#24292e;">TargetPort:        3306/TCP</span></span>
<span class="line"><span style="color:#24292e;">Endpoints:         192.168.0.1:3306</span></span>
<span class="line"><span style="color:#24292e;">Session Affinity:  None</span></span>
<span class="line"><span style="color:#24292e;">Events:            &lt;none&gt;</span></span></code></pre></div><h2 id="挂载pod环境变量" tabindex="-1">挂载<code>Pod</code>环境变量 <a class="header-anchor" href="#挂载pod环境变量" aria-label="Permalink to &quot;挂载\`Pod\`环境变量&quot;">​</a></h2><p>对于容器来说，在不与 <code>Kubernetes</code> 过度耦合的情况下，拥有关于自身的信息有时是很有用的，<code>**Downward API**</code> 允许容器在不使用 <code>Kubernetes</code> 客户端或 <code>API</code> 服务器的情况下获得自己或集群的信息</p><p>创建<code>test.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">test-env</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">matchLabels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">test-env</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">test-env</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">test-env</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">alpine</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: [ </span><span style="color:#9ECBFF;">&quot;sleep&quot;</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">args</span><span style="color:#E1E4E8;">: [ </span><span style="color:#9ECBFF;">&quot;infinity&quot;</span><span style="color:#E1E4E8;"> ]</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">env</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">NODE</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">valueFrom</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#85E89D;">fieldRef</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#85E89D;">fieldPath</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">status.hostIP</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deployment</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">test-env</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">matchLabels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">test-env</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">test-env</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">test-env</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">alpine</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: [ </span><span style="color:#032F62;">&quot;sleep&quot;</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">args</span><span style="color:#24292E;">: [ </span><span style="color:#032F62;">&quot;infinity&quot;</span><span style="color:#24292E;"> ]</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">env</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">NODE</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">valueFrom</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#22863A;">fieldRef</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#22863A;">fieldPath</span><span style="color:#24292E;">: </span><span style="color:#032F62;">status.hostIP</span></span></code></pre></div><p>上面通过环境变量<code>NODE</code>把<code>k8s</code>的<code>status.hostIP</code>（<code>Pod</code> 所在节点的主 <code>IP</code> 地址）挂载进入容器</p><p>应用配置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test.yaml</span></span></code></pre></div><p>查询生成的<code>pod</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-env</span></span>
<span class="line"><span style="color:#79B8FF;">test</span><span style="color:#E1E4E8;">-env-5f55d9d96f-kj69p           </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">/2</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Running</span><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">                 </span><span style="color:#79B8FF;">3</span><span style="color:#9ECBFF;">m43s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-env</span></span>
<span class="line"><span style="color:#005CC5;">test</span><span style="color:#24292E;">-env-5f55d9d96f-kj69p           </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">/2</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Running</span><span style="color:#24292E;">            </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">                 </span><span style="color:#005CC5;">3</span><span style="color:#032F62;">m43s</span></span></code></pre></div><p>测试环境变量，宿主机<code>IP</code>是<code>10.30.6.88</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">exec</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-it</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test-env-5f55d9d96f-kj69p</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sh</span></span>
<span class="line"><span style="color:#B392F0;">/</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;"># env|grep NODE</span></span>
<span class="line"><span style="color:#E1E4E8;">NODE</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10.30</span><span style="color:#9ECBFF;">.6.88</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">exec</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-it</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test-env-5f55d9d96f-kj69p</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sh</span></span>
<span class="line"><span style="color:#6F42C1;">/</span><span style="color:#24292E;"> </span><span style="color:#6A737D;"># env|grep NODE</span></span>
<span class="line"><span style="color:#24292E;">NODE</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10.30</span><span style="color:#032F62;">.6.88</span></span></code></pre></div><p>更多可挂载参数查阅<code>k8s</code>官方文档的<code>Downward API</code>文档</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/downward-api/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/downward-api/</span></span></code></pre></div><h2 id="创建linux网桥" tabindex="-1">创建<code>linux</code>网桥 <a class="header-anchor" href="#创建linux网桥" aria-label="Permalink to &quot;创建\`linux\`网桥&quot;">​</a></h2><p>该方案参考<code>docker</code>服务的<code>docker0</code>网桥实现</p><p><code>Docker</code> 服务默认会创建一个 <code>docker0</code> 网桥（其上有一个 <code>docker0</code> 内部接口），它在内核层连通了其他的物理或虚拟网卡，这就将所有容器和本地主机都放到同一个物理网络</p><p><code>Docker</code> 默认指定了<code>docker0</code> 接口 的 <code>IP</code> 地址(默认<code>172.17.0.1</code>)和子网掩码，让主机和容器之间可以通过网桥相互通信</p><p>在<code>Ubuntu</code>上创建网桥采用<code>netplan</code>实现</p><p>（其他发行版本创建自行搜索，保证创建网桥之后可以持久化，网桥不需要连接其他网口，有网桥<code>IP</code>即可）</p><p>创建<code>/etc/netplan/k8s-bridge.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">network</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">version</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">renderer</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networkd</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">bridges</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">k8s-bridge</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">addresses</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">172.172.0.1/28</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">network</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">version</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">renderer</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networkd</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">bridges</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">k8s-bridge</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">addresses</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">172.172.0.1/28</span><span style="color:#24292E;">]</span></span></code></pre></div><p>配置应用</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ netplan apply</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ netplan apply</span></span></code></pre></div><p>查看网口状态信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ip address show k8s-bridge</span></span>
<span class="line"><span style="color:#e1e4e8;">65: k8s-bridge: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span></span>
<span class="line"><span style="color:#e1e4e8;">    link/ether 56:97:87:ba:a8:97 brd ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="color:#e1e4e8;">    inet 172.172.0.1/28 brd 172.172.0.15 scope global k8s-bridge</span></span>
<span class="line"><span style="color:#e1e4e8;">       valid_lft forever preferred_lft forever</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ip address show k8s-bridge</span></span>
<span class="line"><span style="color:#24292e;">65: k8s-bridge: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span></span>
<span class="line"><span style="color:#24292e;">    link/ether 56:97:87:ba:a8:97 brd ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="color:#24292e;">    inet 172.172.0.1/28 brd 172.172.0.15 scope global k8s-bridge</span></span>
<span class="line"><span style="color:#24292e;">       valid_lft forever preferred_lft forever</span></span></code></pre></div><p>创建一个容器测试一下网络访问，容器内部<code>ping 172.172.0.1</code>，该<code>IP</code>值是固定的，即刚刚创建的网桥的<code>IP</code>，即使主机<code>IP</code>修改了，也不会影响容器的通信</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl run -it alpine-test --image=alpine -- sh</span></span>
<span class="line"><span style="color:#e1e4e8;">If you don&#39;t see a command prompt, try pressing enter.</span></span>
<span class="line"><span style="color:#e1e4e8;">/ # ping 172.172.0.1</span></span>
<span class="line"><span style="color:#e1e4e8;">PING 172.172.0.1 (172.172.0.1): 56 data bytes</span></span>
<span class="line"><span style="color:#e1e4e8;">64 bytes from 172.172.0.1: seq=0 ttl=64 time=0.209 ms</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl run -it alpine-test --image=alpine -- sh</span></span>
<span class="line"><span style="color:#24292e;">If you don&#39;t see a command prompt, try pressing enter.</span></span>
<span class="line"><span style="color:#24292e;">/ # ping 172.172.0.1</span></span>
<span class="line"><span style="color:#24292e;">PING 172.172.0.1 (172.172.0.1): 56 data bytes</span></span>
<span class="line"><span style="color:#24292e;">64 bytes from 172.172.0.1: seq=0 ttl=64 time=0.209 ms</span></span></code></pre></div><p>创建<code>endponints, service</code>的绑定</p><p><code>k8s-bridge-service.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Endpoints</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">k8s-bridge</span></span>
<span class="line"><span style="color:#85E89D;">subsets</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  - </span><span style="color:#85E89D;">addresses</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">ip</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">172.172.0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">tcp</span></span>
<span class="line"><span style="color:#B392F0;">---</span></span>
<span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">k8s-bridge</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">tcp</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3306</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Endpoints</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">k8s-bridge</span></span>
<span class="line"><span style="color:#22863A;">subsets</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  - </span><span style="color:#22863A;">addresses</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">ip</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">172.172.0.1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">tcp</span></span>
<span class="line"><span style="color:#6F42C1;">---</span></span>
<span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">k8s-bridge</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">tcp</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3306</span></span></code></pre></div><p>如果宿主机存在外部<code>mysql</code>服务，则容器内部就可以通过<code>k8s-bridge:3306</code>访问该服务</p><p>如果存在一个宿主机上的<code>HTTP</code>服务，则可以用这种方式配置一个<code>service</code>，这样就可以在<code>ingress</code>配置路由访问该<code>service</code></p><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/downward-api/" target="_blank" rel="noreferrer"><code>k8s downwward API</code></a></p><p><a href="https://docs.openshift.com/dedicated/3/dev_guide/integrating_external_services.html#defining-a-service-for-an-external-database" target="_blank" rel="noreferrer"><code>Defining a Service for an External Database</code></a></p><p><a href="https://www.cnblogs.com/all-smile/p/16633820.html" target="_blank" rel="noreferrer"><code>Docker0</code>网络及原理探究</a></p>`,61),o=[e];function c(t,r,y,E,i,d){return n(),a("div",null,o)}const h=s(l,[["render",c]]);export{u as __pageData,h as default};
