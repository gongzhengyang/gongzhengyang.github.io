import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.ec8f7e8e.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"published/rust/rust二进制文件大小优化.md","filePath":"published/rust/rust二进制文件大小优化.md"}'),p={name:"published/rust/rust二进制文件大小优化.md"},o=l(`<p><code>Rust</code>二进制文件大小优化，在优化二进制文件过程中，编译时间会增加，但是一般编译时候的优化会加快程序执行速度</p><h2 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-label="Permalink to &quot;初始化项目&quot;">​</a></h2><p>在<code>Ubuntu22</code>上面进行实验</p><p>创建项目</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cargo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span></span></code></pre></div><p>修改<code>Cargo.toml</code>如下，需要加入一点常用的库</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">dependencies</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">tokio = {version = </span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;">, features = [</span><span style="color:#9ECBFF;">&quot;full&quot;</span><span style="color:#E1E4E8;">]}</span></span>
<span class="line"><span style="color:#E1E4E8;">tracing = </span><span style="color:#9ECBFF;">&quot;0.1&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">tracing-subscriber = </span><span style="color:#9ECBFF;">&quot;0.3&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">dependencies</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">tokio = {version = </span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;">, features = [</span><span style="color:#032F62;">&quot;full&quot;</span><span style="color:#24292E;">]}</span></span>
<span class="line"><span style="color:#24292E;">tracing = </span><span style="color:#032F62;">&quot;0.1&quot;</span></span>
<span class="line"><span style="color:#24292E;">tracing-subscriber = </span><span style="color:#032F62;">&quot;0.3&quot;</span></span></code></pre></div><p>修改<code>main.rs</code>如下</p><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">#[tokio</span><span style="color:#F97583;">::</span><span style="color:#E1E4E8;">main]</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">tracing_subscriber</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">fmt</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">loop</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">tokio</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">time</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">sleep</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">std</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">time</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">Duration</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">from_secs</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">))</span><span style="color:#F97583;">.await</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">tracing</span><span style="color:#F97583;">::</span><span style="color:#B392F0;">info!</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">#[tokio</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">main]</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">fn</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">tracing_subscriber</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">fmt</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">loop</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">tokio</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">time</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">sleep</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">std</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">time</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">Duration</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">from_secs</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">))</span><span style="color:#D73A49;">.await</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">tracing</span><span style="color:#D73A49;">::</span><span style="color:#6F42C1;">info!</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, world!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="debug和release的大小对比" tabindex="-1"><code>debug</code>和<code>release</code>的大小对比 <a class="header-anchor" href="#debug和release的大小对比" aria-label="Permalink to &quot;\`debug\`和\`release\`的大小对比&quot;">​</a></h2><p>编译</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cargo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cargo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span></span></code></pre></div><p>查看大小</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ll</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">target/</span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;">           </span></span>
<span class="line"><span style="color:#B392F0;">target/debug:</span></span>
<span class="line"><span style="color:#B392F0;">总计</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">28</span><span style="color:#9ECBFF;">M</span></span>
<span class="line"><span style="color:#B392F0;">-rwxrwxr-x</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gong</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gong</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">28</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">四月</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#9ECBFF;">:47</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">target/release:</span></span>
<span class="line"><span style="color:#B392F0;">总计</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5.0</span><span style="color:#9ECBFF;">M</span></span>
<span class="line"><span style="color:#B392F0;">-rwxrwxr-x</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gong</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gong</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">5.0</span><span style="color:#9ECBFF;">M</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">四月</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#9ECBFF;">:46</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo</span></span>
<span class="line"><span style="color:#79B8FF;">....</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ll</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target/</span><span style="color:#005CC5;">*</span><span style="color:#24292E;">           </span></span>
<span class="line"><span style="color:#6F42C1;">target/debug:</span></span>
<span class="line"><span style="color:#6F42C1;">总计</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#032F62;">M</span></span>
<span class="line"><span style="color:#6F42C1;">-rwxrwxr-x</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gong</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gong</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">28</span><span style="color:#032F62;">M</span><span style="color:#24292E;"> </span><span style="color:#032F62;">四月</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">25</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#032F62;">:47</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">target/release:</span></span>
<span class="line"><span style="color:#6F42C1;">总计</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5.0</span><span style="color:#032F62;">M</span></span>
<span class="line"><span style="color:#6F42C1;">-rwxrwxr-x</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gong</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gong</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">5.0</span><span style="color:#032F62;">M</span><span style="color:#24292E;"> </span><span style="color:#032F62;">四月</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">25</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#032F62;">:46</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo</span></span>
<span class="line"><span style="color:#005CC5;">....</span></span></code></pre></div><p>可见<code>release</code>版本二进制大约是<code>debug</code>版本的<code>17%</code>，后续所有二进制优化采用<code>release 5M</code>大小为基准，每次优化都只改动一个配置项作为对比</p><h2 id="优化符号信息symbols" tabindex="-1">优化符号信息<code>symbols</code> <a class="header-anchor" href="#优化符号信息symbols" aria-label="Permalink to &quot;优化符号信息\`symbols\`&quot;">​</a></h2><p>在<code>Linux</code>和<code>macOS</code>上，默认情况下，符号信息包含在编译的<code>.elf</code>文件中，正确执行二进制文件不需要此信息</p><p>配置<code>Cross.toml</code></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">strip = </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">strip = </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>编译之后<code>demo</code>二进制变为<code>887k</code>，约为之前的<code>17%</code>，效果好</p><p>这个配置项在项目比较大的时候，比如最终二进制是<code>100M</code>优化效果就不怎么明显了，一般符号信息是会减小几M大小，存在一个上限</p><h2 id="配置优化level" tabindex="-1">配置优化<code>level</code> <a class="header-anchor" href="#配置优化level" aria-label="Permalink to &quot;配置优化\`level\`&quot;">​</a></h2><p><code>opt-level</code>可选项</p><ul><li><code>0</code>: 无优化（<code>debug</code>默认优化）</li><li><code>1</code>: 基本优化</li><li><code>2</code>: 一些优化</li><li><code>3</code>: 全部优化，(<code>release</code>默认优化)</li><li><code>&quot;s&quot;</code>: 优化输出的二进制文件的大小</li><li><code>&quot;z&quot;</code>: 优化二进制文件大小，但也会关闭循环向量化</li></ul><p>配置如下</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">opt-level = </span><span style="color:#9ECBFF;">&quot;z&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">opt-level = </span><span style="color:#032F62;">&quot;z&quot;</span></span></code></pre></div><p>优化后<code>demo</code>变为<code>5.1M</code>了，二进制反而变大，很多文档都提到要配置这个优化项，但是从来没发现有什么效果</p><p>详情参考官方文档</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://doc.rust-lang.org/cargo/reference/profiles.html</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://doc.rust-lang.org/cargo/reference/profiles.html</span></span></code></pre></div><h2 id="启用链接时优化" tabindex="-1">启用链接时优化 <a class="header-anchor" href="#启用链接时优化" aria-label="Permalink to &quot;启用链接时优化&quot;">​</a></h2><p>默认情况下，<code>Cargo</code>指示编译单元单独编译和优化，<code>LTO</code>指示链接器在链接阶段进行优化，例如，这可以删除无用代码，有些代码段不会被调用到，并减少二进制大小</p><p>默认<code>release</code>是没有开启这个配置，开启这个配置后如果项目比较大，则会大幅度增加编译时间，项目依赖越多，代码总量越多，优化效果越明显</p><p>支持的选项包括：</p><ul><li><code>false</code>: 只会对代码生成单元中的本地包进行 <code>thin LTO</code> 优化，若代码生成单元数为 1 或者 <code>opt-level</code> 为 0，则不会进行任何 <code>LTO</code> 优化</li><li><code>true</code> 或 <code>fat</code>：对依赖图中的所有包进行 <code>fat LTO</code> 优化</li><li><code>thin</code>：对依赖图的所有包进行 <code>thin LTO</code>，相比 <code>fat</code> 来说，它仅牺牲了一点性能，但是换来了链接时间的可观减少</li><li><code>off</code>： 禁用 <code>LTO</code></li></ul><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">lto = </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">lto = </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>编译后二进制变为<code>2.6M</code>，约为之前的<code>52%</code>，效果好</p><h2 id="减少并行代码生成单元" tabindex="-1">减少并行代码生成单元 <a class="header-anchor" href="#减少并行代码生成单元" aria-label="Permalink to &quot;减少并行代码生成单元&quot;">​</a></h2><p><code>Cargo</code>为发布版本指定了16个并行代码单元，这改善了编译时间，但妨碍了一些优化，如果配置为1，就可以最大程度避免并行代码单元中的妨碍优化</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">codegen-units = </span><span style="color:#79B8FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">codegen-units = </span><span style="color:#005CC5;">1</span></span></code></pre></div><p>编译后文件大小为<code>4.8M</code>，约为之前的<code>96%</code>，效果不怎么明显</p><h2 id="配置程序panic时候的行为" tabindex="-1">配置程序<code>panic</code>时候的行为 <a class="header-anchor" href="#配置程序panic时候的行为" aria-label="Permalink to &quot;配置程序\`panic\`时候的行为&quot;">​</a></h2><p>当<code>Rust</code>代码遇到必须调用<code>panic!()</code>的情况时，它会展开堆栈并生成有用的回溯，展开代码需要额外的二进制，可以调整<code>Rust</code>立即中止程序而不是展开栈信息，这样就不需要额外的展开代码</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">panic = </span><span style="color:#9ECBFF;">&quot;abort&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">panic = </span><span style="color:#032F62;">&quot;abort&quot;</span></span></code></pre></div><p>编译后程序大小为<code>4.7M</code>，约为之前的<code>97.5%</code>，这样配置的话程序如果报错就看不到什么地方<code>panic</code>了，会比较影响线上环境体验，不推荐使用</p><h2 id="大杀器upx" tabindex="-1">大杀器<code>UPX</code> <a class="header-anchor" href="#大杀器upx" aria-label="Permalink to &quot;大杀器\`UPX\`&quot;">​</a></h2><p><code>upx</code>是一个二进制压缩工具，支持各类二进制可执行文件的压缩，<code>rust/golang/c.....</code>，在大部分情况下可以把二进制执行文件压缩到原来的<code>30%</code>左右，压缩后的文件可以直接由系统执行，支持多系统和平台</p><h4 id="项目地址" tabindex="-1">项目地址 <a class="header-anchor" href="#项目地址" aria-label="Permalink to &quot;项目地址&quot;">​</a></h4><p>安装的时候尽量去官方项目的<code>release</code>获取到最新的<code>release</code>，里面包含一个<code>upx</code>可执行文件用于压缩二进制程序</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/upx/upx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/upx/upx</span></span></code></pre></div><p><code>upx</code>支持不同的压缩级别<code>1-9</code>，最高压缩级别是<code>9</code></p><p>一般执行<code>upx -9 文件</code>即可</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">upx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-9</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">target/release/demo</span></span>
<span class="line"><span style="color:#E1E4E8;">                       </span><span style="color:#B392F0;">Ultimate</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Packer</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">for</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">eXecutables</span></span>
<span class="line"><span style="color:#E1E4E8;">                          </span><span style="color:#B392F0;">Copyright</span><span style="color:#E1E4E8;"> (C) 1996 - 2023</span></span>
<span class="line"><span style="color:#B392F0;">UPX</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4.0</span><span style="color:#9ECBFF;">.2</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">Markus</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Oberhumer,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Laszlo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Molnar</span><span style="color:#E1E4E8;"> &amp; </span><span style="color:#B392F0;">John</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Reiser</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">Jan</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30</span><span style="color:#9ECBFF;">th</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2023</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">File</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">size</span><span style="color:#E1E4E8;">         </span><span style="color:#9ECBFF;">Ratio</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Format</span><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">Name</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">--------------------</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">------</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">-----------</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">-----------</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">5178056</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1173024</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">22.65</span><span style="color:#9ECBFF;">%</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">linux/amd64</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">demo</span><span style="color:#E1E4E8;">                          </span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">Packed</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">upx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-9</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target/release/demo</span></span>
<span class="line"><span style="color:#24292E;">                       </span><span style="color:#6F42C1;">Ultimate</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Packer</span><span style="color:#24292E;"> </span><span style="color:#032F62;">for</span><span style="color:#24292E;"> </span><span style="color:#032F62;">eXecutables</span></span>
<span class="line"><span style="color:#24292E;">                          </span><span style="color:#6F42C1;">Copyright</span><span style="color:#24292E;"> (C) 1996 - 2023</span></span>
<span class="line"><span style="color:#6F42C1;">UPX</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4.0</span><span style="color:#032F62;">.2</span><span style="color:#24292E;">       </span><span style="color:#032F62;">Markus</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Oberhumer,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Laszlo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Molnar</span><span style="color:#24292E;"> &amp; </span><span style="color:#6F42C1;">John</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Reiser</span><span style="color:#24292E;">   </span><span style="color:#032F62;">Jan</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30</span><span style="color:#032F62;">th</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2023</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">File</span><span style="color:#24292E;"> </span><span style="color:#032F62;">size</span><span style="color:#24292E;">         </span><span style="color:#032F62;">Ratio</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Format</span><span style="color:#24292E;">      </span><span style="color:#032F62;">Name</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">--------------------</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">------</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">-----------</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">-----------</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">5178056</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">1173024</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">22.65</span><span style="color:#032F62;">%</span><span style="color:#24292E;">   </span><span style="color:#032F62;">linux/amd64</span><span style="color:#24292E;">   </span><span style="color:#032F62;">demo</span><span style="color:#24292E;">                          </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">Packed</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file.</span></span></code></pre></div><p>之后查看二进制可执行文件变为了<code>1.2M</code>，约为原来的<code>22.6%</code></p><h4 id="linux上面使用strings查看二进制文件" tabindex="-1"><code>linux</code>上面使用<code>strings</code>查看二进制文件 <a class="header-anchor" href="#linux上面使用strings查看二进制文件" aria-label="Permalink to &quot;\`linux\`上面使用\`strings\`查看二进制文件&quot;">​</a></h4><p>查看压缩前的可执行文件内容</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">strings</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">target/release/demo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">head</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">/lib64/ld-linux-x86-64.so.2</span></span>
<span class="line"><span style="color:#B392F0;">_ITM_deregisterTMCloneTable</span></span>
<span class="line"><span style="color:#B392F0;">__gmon_start__</span></span>
<span class="line"><span style="color:#B392F0;">_ITM_registerTMCloneTable</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_Resume</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_Backtrace</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_GetLanguageSpecificData</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_GetIPInfo</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_GetDataRelBase</span></span>
<span class="line"><span style="color:#B392F0;">_Unwind_GetRegionStart</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">strings</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target/release/demo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">head</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">/lib64/ld-linux-x86-64.so.2</span></span>
<span class="line"><span style="color:#6F42C1;">_ITM_deregisterTMCloneTable</span></span>
<span class="line"><span style="color:#6F42C1;">__gmon_start__</span></span>
<span class="line"><span style="color:#6F42C1;">_ITM_registerTMCloneTable</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_Resume</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_Backtrace</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_GetLanguageSpecificData</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_GetIPInfo</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_GetDataRelBase</span></span>
<span class="line"><span style="color:#6F42C1;">_Unwind_GetRegionStart</span></span></code></pre></div><p>查看压缩后的内容，可以看到<code>UPX</code>把开头的信息改写了</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">strings</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">target/release/demo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#B392F0;">head</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"><span style="color:#B392F0;">1tUPX!</span></span>
<span class="line"><span style="color:#B392F0;">m@/H</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">O0OS</span></span>
<span class="line"><span style="color:#B392F0;">tdPo</span></span>
<span class="line"><span style="color:#B392F0;">/lib64</span></span>
<span class="line"><span style="color:#B392F0;">nux-x86-</span></span>
<span class="line"><span style="color:#B392F0;">.so.</span></span>
<span class="line"><span style="color:#B392F0;">_ITM_deregist</span></span>
<span class="line"><span style="color:#B392F0;">CloneTable</span></span>
<span class="line"><span style="color:#B392F0;">__gm_.art</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">strings</span><span style="color:#24292E;"> </span><span style="color:#032F62;">target/release/demo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">head</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"><span style="color:#6F42C1;">1tUPX!</span></span>
<span class="line"><span style="color:#6F42C1;">m@/H</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#6F42C1;">O0OS</span></span>
<span class="line"><span style="color:#6F42C1;">tdPo</span></span>
<span class="line"><span style="color:#6F42C1;">/lib64</span></span>
<span class="line"><span style="color:#6F42C1;">nux-x86-</span></span>
<span class="line"><span style="color:#6F42C1;">.so.</span></span>
<span class="line"><span style="color:#6F42C1;">_ITM_deregist</span></span>
<span class="line"><span style="color:#6F42C1;">CloneTable</span></span>
<span class="line"><span style="color:#6F42C1;">__gm_.art</span></span></code></pre></div><h4 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h4><p>采用二进制程序加壳技术，<code>UPX</code> 将程序压缩，并在头部加入解压的程序，加壳过的程序可以直接运行，但是不能查看源代码，要经过脱壳才可以查看源代码</p><p>加壳与解压</p><ul><li><p>在文件头里加了一段指令，告诉CPU，怎么才能解压自己（在解压时候执行）</p></li><li><p>利用特殊的算法，对<code>EXE</code>、<code>DLL</code>，其他二进制文件里的资源进行压缩，类似<code>zip</code>的效果</p></li><li><p>压缩之后的文件，可以独立运行，给可执行的文件加上个外衣</p></li><li><p>加壳工具解压过程完全隐蔽，都在内存中完成，用户执行的只是这个外壳程序</p></li><li><p>执行时候，壳就会把原来的程序在内存中解开，解开后，以后的就交给真正的程序</p></li></ul><h4 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h4><ul><li><strong><code>UPX</code> 可以压缩各种类型的可执行文件，压缩效率非常可观</strong></li><li>压缩后的文件可以直接由操作系统执行</li><li>压缩过程不会修改源文件，也就意味着解压后直接可以得到原始文件</li><li>不会产生额外的动态库调用</li><li>没有运行时性能损失</li><li>反跟踪、被人跟踪调试、防止程序被别人静态分析，保护你程序数据的完整性，防止被程序修改和被窥视内幕</li></ul><h4 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h4><ul><li>运行的程序不会共享数据段（<em>汇编</em>），所以多实例运行的程序不适合压缩</li><li>使用 <code>ldd</code> 和 <code>size</code> 命令无法获取到程序的有效信息</li><li>打开时消耗更多的 <code>CPU</code> 资源（执行的时候会使用解压算法对压缩后的可执行文件进行解压运算）</li><li>在运行时占用更多的内存（主要是多了几兆<code>UPX</code>解压程序）</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>很多优化方式一般都是压缩效果不怎么明显，但是会增加编译耗时或者影响程序使用体验</p><p>所以采用优化方式如下</p><ul><li><strong>启用链接时优化</strong></li><li><strong>除去不必要的<code>Symbols</code></strong></li><li><strong>采用<code>upx</code>进一步压缩</strong></li></ul><p>配置<code>Cargo.toml</code>为如下</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">profile</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">release</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">strip = </span><span style="color:#79B8FF;">true</span></span>
<span class="line"><span style="color:#E1E4E8;">lto = </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">profile</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">release</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">strip = </span><span style="color:#005CC5;">true</span></span>
<span class="line"><span style="color:#24292E;">lto = </span><span style="color:#005CC5;">true</span></span></code></pre></div><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://github.com/johnthagen/min-sized-rust" target="_blank" rel="noreferrer"><code>Minimizing Rust Binary Size</code></a></p><p><a href="https://lilogs.com/archives/2143.html" target="_blank" rel="noreferrer">使用 <code>UPX</code> 压缩可执行文件</a></p><p><a href="https://dzone.com/articles/packers-how-they-work-featuring-upx" target="_blank" rel="noreferrer"><code>How They Work, Featuring UPX</code></a></p>`,76),e=[o];function c(t,r,y,i,E,d){return a(),n("div",null,e)}const h=s(p,[["render",c]]);export{u as __pageData,h as default};
