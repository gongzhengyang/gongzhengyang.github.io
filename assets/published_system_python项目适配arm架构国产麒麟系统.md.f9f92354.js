import{_ as e,o as s,c as a,Q as n}from"./chunks/framework.ec8f7e8e.js";const y=JSON.parse('{"title":"安装对应版本python","description":"","frontmatter":{},"headers":[],"relativePath":"published/system/python项目适配arm架构国产麒麟系统.md","filePath":"published/system/python项目适配arm架构国产麒麟系统.md"}'),p={name:"published/system/python项目适配arm架构国产麒麟系统.md"},o=n(`<h1 id="安装对应版本python" tabindex="-1">安装对应版本<code>python</code> <a class="header-anchor" href="#安装对应版本python" aria-label="Permalink to &quot;安装对应版本\`python\`&quot;">​</a></h1><p>如果系统安装的<code>python</code>版本和项目所需的版本不一致，需要手动下载<code>python</code>二进制包编译安装</p><p>获取指定版本<code>python</code>，网址</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://registry.npmmirror.com/binary.html?path=python/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://registry.npmmirror.com/binary.html?path=python/</span></span></code></pre></div><p>比如现在安装<code>python3.6.15</code>版本，下面命令参数需要依据具体<code>python</code>版本而改变</p><p>创建文件夹</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo mkdir /usr/local/python3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo mkdir /usr/local/python3</span></span></code></pre></div><p>获取对应版本的压缩包文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd /usr/local/python3</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo wget https://cdn.npmmirror.com/binaries/python/3.6.15/Python-3.6.15.tar.xz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd /usr/local/python3</span></span>
<span class="line"><span style="color:#24292e;">$ sudo wget https://cdn.npmmirror.com/binaries/python/3.6.15/Python-3.6.15.tar.xz</span></span></code></pre></div><p>解压压缩包之后<code>cd</code>到解压文件夹，会存在一个配置文件<code>configure</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo tar -xvf Python-3.6.15.tar.xz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo tar -xvf Python-3.6.15.tar.xz</span></span></code></pre></div><p>执行配置文件，该操作会生成<code>Makefile</code>文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd /usr/local/python3/Python-3.6.15</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo ./configure  --enable-optimizations --prefix=/usr/local/python3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd /usr/local/python3/Python-3.6.15</span></span>
<span class="line"><span style="color:#24292e;">$ sudo ./configure  --enable-optimizations --prefix=/usr/local/python3</span></span></code></pre></div><p><code>--enable-optimizations</code>允许进行优化，<code>--prefix</code>指定安装目录</p><p>编译，安装</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo make all</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo make all</span></span>
<span class="line"><span style="color:#24292e;">$ sudo make install</span></span></code></pre></div><p>上述步骤执行完成之后，<code>/usr/local/python3/bin</code>会安装好对应版本的<code>python</code>和<code>pip</code>可执行文件，现在创建对应的软链接</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3.6</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo ln -s /usr/local/python3/bin/python3.6 /usr/bin/python3.6</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo ln -s /usr/local/python3/bin/pip3.6 /usr/bin/pip3.6</span></span>
<span class="line"><span style="color:#24292e;">$ sudo ln -s /usr/local/python3/bin/python3.6 /usr/bin/python3.6</span></span></code></pre></div><p>验证安装结果，可以看到<code>pip3.6</code>指向的<code>python</code>版本以及对应位置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ pip3.6 -V</span></span>
<span class="line"><span style="color:#e1e4e8;">pip 18.1 from /usr/local/python3/lib/python3.6/site-packages/pip (python 3.6)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ pip3.6 -V</span></span>
<span class="line"><span style="color:#24292e;">pip 18.1 from /usr/local/python3/lib/python3.6/site-packages/pip (python 3.6)</span></span></code></pre></div><p>注意点</p><p>由于<code>python</code>的位置是<code>/usr/local/python3</code>，所以在<code>pip</code>安装完成一些库生成的二进制包的可执行文件路径位置是<code>/usr/local/python3/bin/</code></p><p>比如安装完成<code>celery</code>和<code>uwsgi</code>，所以执行的时候需要执行</p><p><code>/usr/local/python3/bin/celery</code>或者<code>/usr/local/python3/bin/uwsgi</code></p><h2 id="docker拉取镜像超时" tabindex="-1"><code>docker</code>拉取镜像超时 <a class="header-anchor" href="#docker拉取镜像超时" aria-label="Permalink to &quot;\`docker\`拉取镜像超时&quot;">​</a></h2><p><code>docker pull redis</code>报错如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Head https://registry-1.docker.io/v2/library/redis/manifests/latest: Get https://auth.docker.io/token?scope=repository%3Alibrary%2Fredis%3Apull&amp;service=registry.docker.io: net/http: request canceled while waiting for connection</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Head https://registry-1.docker.io/v2/library/redis/manifests/latest: Get https://auth.docker.io/token?scope=repository%3Alibrary%2Fredis%3Apull&amp;service=registry.docker.io: net/http: request canceled while waiting for connection</span></span></code></pre></div><p>或者报错如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</span></span></code></pre></div><p>则需要修改域名解析文件<code>/etc/resolv.conf</code>，直接使用<code>vim</code>编辑</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">nameserver 8.8.8.8</span></span>
<span class="line"><span style="color:#e1e4e8;">nameserver 8.8.4.4</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">nameserver 8.8.8.8</span></span>
<span class="line"><span style="color:#24292e;">nameserver 8.8.4.4</span></span></code></pre></div><p>之后重启<code>docker</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo systemctl restart docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo systemctl restart docker</span></span></code></pre></div><h2 id="docker拉取镜像报错非法tar头部" tabindex="-1"><code>docker</code>拉取镜像报错非法<code>tar</code>头部 <a class="header-anchor" href="#docker拉取镜像报错非法tar头部" aria-label="Permalink to &quot;\`docker\`拉取镜像报错非法\`tar\`头部&quot;">​</a></h2><p>报错如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">failed to register layer: ApplyLayer exit status 1 stdout:  stderr: archive/tar: invalid tar header</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">failed to register layer: ApplyLayer exit status 1 stdout:  stderr: archive/tar: invalid tar header</span></span></code></pre></div><p>该错误产生原因是使用<code>unpigz</code>解压缩<code>docker</code>镜像层导致的</p><p>解决方案一，移动<code>unpigz</code>可执行文件位置使其不解压</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ mv /usr/bin/unpigz /usr/bin/unpigz.bak</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ mv /usr/bin/unpigz /usr/bin/unpigz.bak</span></span></code></pre></div><p>解决方案二，参考<code>docker</code>官方文档，配置对应的环境变量</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ vim /usr/lib/systemd/system/docker.service</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># 在Service的单元下面，增加这一行</span></span>
<span class="line"><span style="color:#e1e4e8;">[Service]</span></span>
<span class="line"><span style="color:#e1e4e8;">Environment=&quot;MOBY_DISABLE_PIGZ=true&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ vim /usr/lib/systemd/system/docker.service</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># 在Service的单元下面，增加这一行</span></span>
<span class="line"><span style="color:#24292e;">[Service]</span></span>
<span class="line"><span style="color:#24292e;">Environment=&quot;MOBY_DISABLE_PIGZ=true&quot;</span></span></code></pre></div><h2 id="git-clone域名解析报错" tabindex="-1"><code>git clone</code>域名解析报错 <a class="header-anchor" href="#git-clone域名解析报错" aria-label="Permalink to &quot;\`git clone\`域名解析报错&quot;">​</a></h2><p>报错输出<code>Could not resolve host: gitee.com</code></p><p>麒麟系统的<code>git</code>感觉压根就不支持域名解析，首先查看<code>gitee.com</code>的<code>IP</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ nslookup gitee.com</span></span>
<span class="line"><span style="color:#e1e4e8;">Server:         223.5.5.5</span></span>
<span class="line"><span style="color:#e1e4e8;">Address:        223.5.5.5#53</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Non-authoritative answer:</span></span>
<span class="line"><span style="color:#e1e4e8;">gitee.com	canonical name = aoufnebg.dayugslb.com.</span></span>
<span class="line"><span style="color:#e1e4e8;">Name:	aoufnebg.dayugslb.com</span></span>
<span class="line"><span style="color:#e1e4e8;">Address: 212.64.63.215</span></span>
<span class="line"><span style="color:#e1e4e8;">Name:	aoufnebg.dayugslb.com</span></span>
<span class="line"><span style="color:#e1e4e8;">Address: 212.64.63.190</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ nslookup gitee.com</span></span>
<span class="line"><span style="color:#24292e;">Server:         223.5.5.5</span></span>
<span class="line"><span style="color:#24292e;">Address:        223.5.5.5#53</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Non-authoritative answer:</span></span>
<span class="line"><span style="color:#24292e;">gitee.com	canonical name = aoufnebg.dayugslb.com.</span></span>
<span class="line"><span style="color:#24292e;">Name:	aoufnebg.dayugslb.com</span></span>
<span class="line"><span style="color:#24292e;">Address: 212.64.63.215</span></span>
<span class="line"><span style="color:#24292e;">Name:	aoufnebg.dayugslb.com</span></span>
<span class="line"><span style="color:#24292e;">Address: 212.64.63.190</span></span></code></pre></div><p>查询不到的话需要显示指定<code>dns</code>地址</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ nslookup gitee.com 8.8.8.8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ nslookup gitee.com 8.8.8.8</span></span></code></pre></div><p>最后把对应的<code>IP</code>解析写入<code>/etc/hosts</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">212.64.63.190 gitee.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">212.64.63.190 gitee.com</span></span></code></pre></div><h2 id="git-clone的gnutls报错" tabindex="-1"><code>git clone</code>的<code>gnutls</code>报错 <a class="header-anchor" href="#git-clone的gnutls报错" aria-label="Permalink to &quot;\`git clone\`的\`gnutls\`报错&quot;">​</a></h2><p>报错输出<code>gnutls_handshake() failed: 在 push 函数中出错</code></p><p>这个解决比较麻烦，需要把<code>gnutls</code>替换为<code>openssl</code>，只能从源码构建<code>git</code>解决</p><p>安装一些前置依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ apt-get install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev</span></span></code></pre></div><p>查看系统当前<code>git</code>版本</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ git version</span></span>
<span class="line"><span style="color:#e1e4e8;">git version 2.25.1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ git version</span></span>
<span class="line"><span style="color:#24292e;">git version 2.25.1</span></span></code></pre></div><p>保险起见获取一个相同版本的<code>git</code>包</p><p>获取<code>git</code>的网站地址<a href="https://mirrors.edge.kernel.org/pub/software/scm/git/" target="_blank" rel="noreferrer"><code>kernel.org</code></a>，<a href="https://github.com/git/git/tags" target="_blank" rel="noreferrer"><code>git镜像</code></a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.25.1.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.25.1.tar.gz</span></span></code></pre></div><p>解压编译</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ tar -zxf git-2.25.1.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;">$ cd git-2.25.1</span></span>
<span class="line"><span style="color:#e1e4e8;">$ make configure</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ tar -zxf git-2.25.1.tar.gz</span></span>
<span class="line"><span style="color:#24292e;">$ cd git-2.25.1</span></span>
<span class="line"><span style="color:#24292e;">$ make configure</span></span></code></pre></div><p>这个时候默认是使用<code>openssl</code>的（这个不清楚在别的版本是否是这样的）</p><p>执行之前先执行如下命令，查看输出的提示信息当中是否有这一行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ./configure --help</span></span>
<span class="line"><span style="color:#e1e4e8;">...</span></span>
<span class="line"><span style="color:#e1e4e8;">  --with-openssl          use OpenSSL library (default is YES)</span></span>
<span class="line"><span style="color:#e1e4e8;">                          ARG can be prefix for openssl library and headers</span></span>
<span class="line"><span style="color:#e1e4e8;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ./configure --help</span></span>
<span class="line"><span style="color:#24292e;">...</span></span>
<span class="line"><span style="color:#24292e;">  --with-openssl          use OpenSSL library (default is YES)</span></span>
<span class="line"><span style="color:#24292e;">                          ARG can be prefix for openssl library and headers</span></span>
<span class="line"><span style="color:#24292e;">...</span></span></code></pre></div><p>编译安装</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ./configure --prefix=/usr/local/git</span></span>
<span class="line"><span style="color:#e1e4e8;">$ make</span></span>
<span class="line"><span style="color:#e1e4e8;">$ make install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ./configure --prefix=/usr/local/git</span></span>
<span class="line"><span style="color:#24292e;">$ make</span></span>
<span class="line"><span style="color:#24292e;">$ make install</span></span></code></pre></div><p>最后删除系统自带的<code>git</code>，创建一个软链接指向编译生成的<code>git</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo mv /usr/bin/git /usr/bin/git.back</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo ln -s /usr/local/git/bin/git /usr/bin/git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo mv /usr/bin/git /usr/bin/git.back</span></span>
<span class="line"><span style="color:#24292e;">$ sudo ln -s /usr/local/git/bin/git /usr/bin/git</span></span></code></pre></div><h2 id="psycopg2或者psycopy2-binary的pip依赖错误" tabindex="-1"><code>psycopg2</code>或者<code>psycopy2-binary</code>的<code>pip</code>依赖错误 <a class="header-anchor" href="#psycopg2或者psycopy2-binary的pip依赖错误" aria-label="Permalink to &quot;\`psycopg2\`或者\`psycopy2-binary\`的\`pip\`依赖错误&quot;">​</a></h2><p>报错<code>Error: pg_config executable not found.</code></p><ul><li><p><code>pg_config</code>是位于<code>postgresql-devel</code>包当中</p></li><li><p>在<code>Debian/Ubuntu</code>系当中需要安装<code>libpq-dev</code></p></li><li><p>在<code>Centos/Fedora/Cygwin/Babun/Redhat</code>系的系统当中需要<code>libpq-devel</code></p></li><li><p>麒麟系统执行<code>apt install libpq-dev</code></p></li></ul><h2 id="lxml的pip依赖错误" tabindex="-1"><code>lxml</code>的<code>pip</code>依赖错误 <a class="header-anchor" href="#lxml的pip依赖错误" aria-label="Permalink to &quot;\`lxml\`的\`pip\`依赖错误&quot;">​</a></h2><p>报错<code>Error: Please make sure the libxml2 and libxslt development packages are installed</code></p><p>执行<code>apt install libxml2 libxslt1-dev</code></p><h2 id="pillow的pip依赖错误" tabindex="-1"><code>pillow</code>的<code>pip</code>依赖错误 <a class="header-anchor" href="#pillow的pip依赖错误" aria-label="Permalink to &quot;\`pillow\`的\`pip\`依赖错误&quot;">​</a></h2><p>报错如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">    The headers or library files could not be found for jpeg,</span></span>
<span class="line"><span style="color:#e1e4e8;">    a required dependency when compiling Pillow from source.</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">    Please see the install instructions at:</span></span>
<span class="line"><span style="color:#e1e4e8;">       https://pillow.readthedocs.io/en/latest/installation.html</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">    The headers or library files could not be found for jpeg,</span></span>
<span class="line"><span style="color:#24292e;">    a required dependency when compiling Pillow from source.</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">    Please see the install instructions at:</span></span>
<span class="line"><span style="color:#24292e;">       https://pillow.readthedocs.io/en/latest/installation.html</span></span></code></pre></div><p>顺着文档下去发现有很多二进制依赖，注意到<code>zlib</code>和<code>libjpeg</code>库是必要的</p><p>去查看<a href="https://github.com/python-pillow/docker-images/blob/main/ubuntu-22.04-jammy-arm64v8/Dockerfile" target="_blank" rel="noreferrer"><code>python pillow</code>的<code>arm</code>架构的<code>Dockerfile</code></a>查看需要安装到包</p><p>目前只需要按照必要的包即可解决问题</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ apt install libjpeg8-dev zlib1g-dev</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ apt install libjpeg8-dev zlib1g-dev</span></span></code></pre></div><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://docs.docker.com/engine/reference/commandline/dockerd/" target="_blank" rel="noreferrer"><code>docker daemon</code>文档</a></p><p><a href="https://github.com/python-pillow/docker-images/blob/main/ubuntu-22.04-jammy-arm64v8/Dockerfile" target="_blank" rel="noreferrer"><code>python pillow</code>的<code>arm</code>架构的<code>Dockerfile</code></a></p>`,84),l=[o];function c(t,i,d,r,h,g){return s(),a("div",null,l)}const b=e(p,[["render",c]]);export{y as __pageData,b as default};
