import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.ec8f7e8e.js";const p="/assets/istio-mesh-arch.cc36d859.png",o="/assets/istio-k8s-arch.5765bef3.png",F=JSON.parse('{"title":"微服务Microservices","description":"","frontmatter":{},"headers":[],"relativePath":"published/system/微服务与服务网格Istio的简介与使用.md","filePath":"published/system/微服务与服务网格Istio的简介与使用.md"}'),e={name:"published/system/微服务与服务网格Istio的简介与使用.md"},c=l('<h1 id="微服务microservices" tabindex="-1">微服务<code>Microservices</code> <a class="header-anchor" href="#微服务microservices" aria-label="Permalink to &quot;微服务`Microservices`&quot;">​</a></h1><h4 id="历史与背景" tabindex="-1">历史与背景 <a class="header-anchor" href="#历史与背景" aria-label="Permalink to &quot;历史与背景&quot;">​</a></h4><p>从2016 年和 2017 开始，微服务技术迅猛普及，<code>Spring Cloud</code> 为代表的传统侵入式开发框架，占据着微服务市场的主流地位，在<code>golang</code>领域，微服务框架也蓬勃发展，产生了众多成熟的微服务框架，包括<code>go-zero, go-kratos,go-micro,go-kit</code></p><h4 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h4><ul><li><p>微服务（<code>Microservices</code>）是一种架构风格</p></li><li><p>一个大型复杂软件应用由一个或多个微服务组成</p></li><li><p>系统中的各个微服务可被独立部署，各个微服务之间是松耦合的</p></li><li><p>每个微服务仅关注于完成一件任务并很好地完成该任务</p></li><li><p>在所有情况下，每个任务代表着一个小的业务能力</p></li></ul><h4 id="组件与组成概念" tabindex="-1">组件与组成概念 <a class="header-anchor" href="#组件与组成概念" aria-label="Permalink to &quot;组件与组成概念&quot;">​</a></h4><ul><li>服务注册：服务提供方将自己调用地址注册到服务注册中心（采用<code>consul, etcd</code>等），让服务调用方能够方便地找到自己</li><li>服务发现：服务调用方从服务注册中心找到自己需要调用的服务的地址</li><li>负载均衡：服务提供方一般以多实例的形式提供服务，负载均衡功能能够让服务调用方连接到合适的服务节点</li><li>服务网关：服务网关是服务调用的唯一入口，可以在这个组件是实现用户鉴权、动态路由、灰度发布、A/B 测试、负载限流等功能</li><li>配置中心：将本地化的配置信息（<code>properties, xml, yaml</code> 等）注册到配置中心，实现程序包在开发、测试、生产环境的无差别性，方便程序包的迁移</li><li><code>API</code> 管理：以方便的形式编写及更新 <code>API</code> 文档，并以方便的形式供调用者查看和测试</li><li>集成框架：微服务组件都以职责单一的程序包对外提供服务，集成框架以配置的形式将所有微服务组件（特别是管理端组件）集成到统一的界面框架下，让用户能够在统一的界面中使用系统</li><li>分布式事务：对于重要的业务，需要通过分布式事务技术（<code>TCC</code>、高可用消息服务、最大努力通知）保证数据的一致性</li><li>调用链：记录完成一个业务逻辑时调用到的微服务，并将这种串行或并行的调用关系展示出来</li><li>支撑平台：系统微服务化后，系统变得更加碎片化，系统的部署、运维、监控等都比单体架构更加复杂，那么，就需要将大部分的工作自动化</li></ul><h4 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h4><ul><li>降低系统复杂度：每个服务都比较简单，只关注于一个业务功能</li><li>松耦合：微服务架构方式是松耦合的，每个微服务可由不同团队独立开发，互不影响</li><li>跨语言：只要符合服务 <code>API</code> 契约，开发人员可以自由选择开发技术，这就意味着开发人员可以采用新技术编写或重构服务，由于服务相对较小，所以这并不会对整体应用造成太大影响</li><li>独立部署：微服务架构可以使每个微服务独立部署。开发人员无需协调对服务升级或更改的部署。这些更改可以在测试通过后立即部署。所以微服务架构也使得 <code>CI／CD</code> 成为可能</li></ul><h4 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h4><ul><li>缺乏统一的标准：业务逻辑应该按照什么规则划分为微服务，这本身就是一个经验工程，微服务的目标是充分分解应用程序，以促进敏捷开发和持续集成部署</li><li>微服务的分布式特点带来的复杂性：开发人员需要基于 <code>RPC</code> 或者消息实现微服务之间的调用和通信，而这就使得服务之间的发现、服务调用链的跟踪和质量问题变得的相当棘手</li><li>分区的数据库体系和分布式事务：更新多个业务实体的业务交易相当普遍，不同服务可能拥有不同的数据库，<code>CAP</code> 原理的约束，使得我们不得不放弃传统的强一致性，而转而追求最终一致性，这个对开发人员来说是一个挑战</li><li>测试挑战：传统的单体<code>WEB</code>应用只需测试单一的 <code>REST API</code> 即可，而对微服务进行测试，需要启动它依赖的所有其他服务，这种复杂性不可低估</li><li>跨多个服务的更改：比如在传统单体应用中，若有 <code>A、B、C</code> 三个服务需要更改，<code>A</code> 依赖 <code>B</code>，<code>B</code> 依赖 <code>C</code>，我们只需更改相应的模块，然后一次性部署即可，但是在微服务架构中，我们需要仔细规划和协调每个服务的变更部署。我们需要先更新 <code>C</code>，然后更新 <code>B</code>，最后更新 <code>A</code></li><li>部署复杂：微服务由不同的大量服务构成，每种服务可能拥有自己的配置、应用实例数量以及基础服务地址，这里就需要不同的配置、部署、扩展和监控组件，此外，我们还需要服务发现机制，以便服务可以发现与其通信的其他服务的地址，因此，成功部署微服务应用需要开发人员有更好地部署策略和高度自动化的水平</li></ul><h2 id="服务网格service-mesh" tabindex="-1">服务网格<code>Service Mesh</code> <a class="header-anchor" href="#服务网格service-mesh" aria-label="Permalink to &quot;服务网格`Service Mesh`&quot;">​</a></h2><h4 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h4><p>2017 年底，非侵入式的 <code>Service Mesh</code> 技术从萌芽到走向了成熟</p><p>服务网格<code>Service Mesh</code>是处理服务间通信的基础设施层。它负责构成现代云原生应用程序的复杂服务拓扑来可靠地交付请求</p><p>在实践中，<code>Service Mesh</code> 通常以轻量级网络代理阵列的形式实现，这些代理与应用程序代码部署在一起，对应用程序来说无需感知代理的存在</p><p><code>Istio</code>是第二代<code>Service Mesh</code>的明星项目，由<code>Google、IBM、Lyft </code>联合发布</p><h4 id="描述-1" tabindex="-1">描述 <a class="header-anchor" href="#描述-1" aria-label="Permalink to &quot;描述&quot;">​</a></h4><p>是微服务之间位于应用层下面的一层，负责微服务之间的注册发现，网络调用，限流，熔断等</p><h4 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h4><ul><li>应用程序间通讯的中间层</li><li>轻量级网络代理</li><li>应用程序无感知</li><li>解耦应用程序的重试/超时、监控、追踪和服务发现</li></ul><h4 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h4><ul><li>流量管理：控制服务间的流量和<code>API</code>调用流，使调用更可靠，增强不同环境下的网络鲁棒性</li><li>可观测性：了解服务之间的依赖关系和它们之间的性质和流量，提供快速识别定位问题的能力</li><li>策略实施：通过配置<code>mesh</code>而不是以改变代码的方式来控制服务之间的访问策略</li><li>服务识别和安全：提供在<code>mesh</code>里的服务可识别性和安全性保护</li></ul><h2 id="istio架构" tabindex="-1"><code>Istio</code>架构 <a class="header-anchor" href="#istio架构" aria-label="Permalink to &quot;`Istio`架构&quot;">​</a></h2><p>分为控制平面和数据平面</p><ul><li><p><strong>数据平面</strong>：由一组智能代理<code>Envoy</code>以 <code>sidecar</code>模式部署，协调和控制所有服务之间的网络通信</p><ul><li>通常是按照无状态目标设计的，但实际上为了提高流量转发性能，需要缓存一些数据，因此无状态也是有争议的</li><li>直接处理入站和出站数据包，转发、路由、健康检查、负载均衡、认证、鉴权、产生监控数据等</li><li>对应用来说透明，即可以做到无感知部署</li></ul></li><li><p><strong>控制平面</strong>：负责管理和配置代理路由流量，以及在运行时执行的政策</p><ul><li>不直接解析数据包</li><li>与控制平面中的代理通信，下发策略和配置</li><li>负责网络行为的可视化</li><li>通常提供 <code>API </code>或者命令行工具可用于配置版本化管理，便于持续集成和部署</li></ul><p><img src="'+p+`" alt="istio-mesh-arch"></p></li></ul><h4 id="envoy" tabindex="-1"><code>Envoy</code> <a class="header-anchor" href="#envoy" aria-label="Permalink to &quot;\`Envoy\`&quot;">​</a></h4><p><code>sidecar</code>模式: 将应用程序的功能划分为单独的进程运行在同一个最小调度单元中（例如<code>k8s</code>中的 <code>Pod</code>)</p><p><code>Istio</code> 使用 <code>Envoy</code> 代理的扩展版本，该代理是以 <code>C++ </code>开发的高性能代理，用于调解服务网格中所有服务的所有入站和出站流量</p><p><code>Envoy</code> 代理被部署为服务的 <code>sidecar</code>(即架构中<code>Service</code>旁边的<code>Proxy</code>)，在逻辑上为服务增加了 <code>Envoy </code>的许多内置特性，例如</p><ul><li>动态服务发现</li><li>负载均衡</li><li><code>TLS</code> 终端</li><li><code>HTTP/2 </code>与 <code>gRPC</code> 代理</li><li>熔断器</li><li>健康检查</li><li>基于百分比流量分割的分阶段发布</li><li>故障注入</li><li>丰富的指标</li></ul><p>以 <code>sidecar</code>模式部署，这允许 <code>Istio</code> 将大量关于流量行为的信号作为属性提取出来，并发送给监控系统以提供有关整个服务网格的行为信息，<code>Sidecar</code>代理模型还允许你将 <code>Istio</code>功能添加到现有部署中，无需重新构建或重写代码</p><h4 id="pilot" tabindex="-1"><code>Pilot</code> <a class="header-anchor" href="#pilot" aria-label="Permalink to &quot;\`Pilot\`&quot;">​</a></h4><p><code>Pilot</code> 为 <code>Envoy sidecar</code>提供服务发现、用于智能路由的流量管理功能（例如，<code>A/B</code> 测试、金丝雀发布等）以及弹性功能（超时、重试、熔断器等），将控制流量行为的高级路由规则转换为特定于环境的配置</p><h4 id="citadel" tabindex="-1"><code>Citadel</code> <a class="header-anchor" href="#citadel" aria-label="Permalink to &quot;\`Citadel\`&quot;">​</a></h4><p>通过内置的身份和证书管理，可以支持强大的服务间以及最终用户的身份验证，可以使用 <code>Citadel</code> 来升级服务网格中的未加密流量，使用 <code>Citadel</code>，<code>operator</code>可以执行基于服务身份的策略，而不是相对不稳定的 3 层或 4 层网络标识</p><h4 id="galley" tabindex="-1"><code>Galley</code> <a class="header-anchor" href="#galley" aria-label="Permalink to &quot;\`Galley\`&quot;">​</a></h4><p>配置验证、提取、处理和分发组件，负责将其余的 <code>Istio</code> 组件与从底层平台（例如 <code>Kubernetes</code>）获取用户配置的细节隔离开来</p><h2 id="istio-service-mesh的实践" tabindex="-1"><code>Istio Service Mesh</code>的实践 <a class="header-anchor" href="#istio-service-mesh的实践" aria-label="Permalink to &quot;\`Istio Service Mesh\`的实践&quot;">​</a></h2><p>首先，需要有一套<code>k8s</code>系统，可以采用<code>rke2</code>或者<code>k3s</code>搭建</p><p>下载安装<code>Istio</code>（此处需要考虑国内网络访问问题）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl -L https://istio.io/downloadIstio | sh -</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl -L https://istio.io/downloadIstio | sh -</span></span></code></pre></div><p>转到 <code>Istio</code> 包目录，例如，如果包是 <code>istio-1.19.3</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd istio-1.19.3</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd istio-1.19.3</span></span></code></pre></div><p>安装目录包含</p><ul><li><code>samples/</code> 目录下的示例应用程序</li><li><code>bin/</code> 目录下的 <a href="https://istio.io/latest/zh/docs/reference/commands/istioctl" target="_blank" rel="noreferrer"><code>istioctl</code></a> 客户端二进制文件</li></ul><p>将 <code>istioctl</code> 客户端添加到路径（<code>Linux</code> 或 <code>macOS</code>）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ export PATH=$PWD/bin:$PATH</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ export PATH=$PWD/bin:$PATH</span></span></code></pre></div><p>对于本次安装，我们采用 <code>demo</code> <a href="https://istio.io/latest/zh/docs/setup/additional-setup/config-profiles/" target="_blank" rel="noreferrer">配置组合</a>。 选择它是因为它包含了一组专为测试准备的功能集合，另外还有用于生产或性能测试的配置组合。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ istioctl install --set profile=demo -y</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ istioctl install --set profile=demo -y</span></span></code></pre></div><p>给命名空间添加标签，指示 <code>Istio</code> 在部署应用的时候，自动注入 <code>Envoy </code>边车代理</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl label namespace default istio-injection=enabled</span></span>
<span class="line"><span style="color:#e1e4e8;">namespace/default labeled</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl label namespace default istio-injection=enabled</span></span>
<span class="line"><span style="color:#24292e;">namespace/default labeled</span></span></code></pre></div><p>运行<code>istio</code>自带的服务，快速验证集群配置与网络是否正常，如果后面一条命令输出<code>&lt;title&gt;</code>标签，则表示集群正常</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span></span>
<span class="line"><span style="color:#e1e4e8;">$ kubectl exec &quot;$(kubectl get pod -l app=ratings -o jsonpath=&#39;{.items[0].metadata.name}&#39;)&quot; -c ratings -- curl -sS productpage:9080/productpage | grep -o &quot;&lt;title&gt;.*&lt;/title&gt;&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml</span></span>
<span class="line"><span style="color:#24292e;">$ kubectl exec &quot;$(kubectl get pod -l app=ratings -o jsonpath=&#39;{.items[0].metadata.name}&#39;)&quot; -c ratings -- curl -sS productpage:9080/productpage | grep -o &quot;&lt;title&gt;.*&lt;/title&gt;&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">&lt;title&gt;Simple Bookstore App&lt;/title&gt;</span></span></code></pre></div><h2 id="使用gin开发微服务" tabindex="-1">使用<code>gin</code>开发微服务 <a class="header-anchor" href="#使用gin开发微服务" aria-label="Permalink to &quot;使用\`gin\`开发微服务&quot;">​</a></h2><h4 id="环境说明" tabindex="-1">环境说明 <a class="header-anchor" href="#环境说明" aria-label="Permalink to &quot;环境说明&quot;">​</a></h4><p>实验设备<code>IP</code>: <code>172.16.67.147</code></p><p>实验系统: <code>Ubuntu22.04 amd64</code></p><p><code>k8s</code>可以默认使用<code>containerd</code>作为容器运行时，这个和使用<code>docker</code>不冲突，<code>docker</code>也是使用<code>containerd</code>作为容器运行时的</p><p><code>k8s</code>仍然可以直接拉取<code>docker.io</code>的镜像</p><p>使用本地<code>Dockerfile</code>构建镜像，推送到<code>dockerhub</code>（或者企业自己搭建的<code>harbor</code>仓库）之后，可以直接被<code>k8s</code>拉取并使用</p><h4 id="gin代码" tabindex="-1"><code>gin</code>代码 <a class="header-anchor" href="#gin代码" aria-label="Permalink to &quot;\`gin\`代码&quot;">​</a></h4><p>此处使用<code>gin</code>开发一个<code>web</code>服务，并构建镜像，并部署到<code>k8s</code></p><p>创建一个文件夹<code>gin-demo</code>，并创建一个<code>gin-demo/main.go</code>文件写入如下，该服务会监听<code>8080</code>端口，并返回打印当前时间和本机<code>hostname</code>的返回</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/gin-gonic/gin</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">os/exec</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	r </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> gin.</span><span style="color:#79B8FF;">New</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	r.</span><span style="color:#79B8FF;">Use</span><span style="color:#E1E4E8;">(gin.</span><span style="color:#79B8FF;">Recovery</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#E1E4E8;">	r.</span><span style="color:#79B8FF;">GET</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/ping&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">func</span><span style="color:#E1E4E8;">(c </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">gin.Context) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		hostname, _ </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> exec.</span><span style="color:#79B8FF;">Command</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hostname&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">CombinedOutput</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">		date, _ </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> exec.</span><span style="color:#79B8FF;">Command</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;date&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#79B8FF;">CombinedOutput</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">		c.</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">, gin.H{</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">: fmt.</span><span style="color:#79B8FF;">Sprintf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> pong at </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">(date), </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">(hostname)),</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span>
<span class="line"><span style="color:#E1E4E8;">	r.</span><span style="color:#79B8FF;">Run</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// listen and serve on 0.0.0.0:8080</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/gin-gonic/gin</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">os/exec</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	r </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> gin.</span><span style="color:#005CC5;">New</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	r.</span><span style="color:#005CC5;">Use</span><span style="color:#24292E;">(gin.</span><span style="color:#005CC5;">Recovery</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#24292E;">	r.</span><span style="color:#005CC5;">GET</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/ping&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">func</span><span style="color:#24292E;">(c </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">gin.Context) {</span></span>
<span class="line"><span style="color:#24292E;">		hostname, _ </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> exec.</span><span style="color:#005CC5;">Command</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hostname&quot;</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">CombinedOutput</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">		date, _ </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> exec.</span><span style="color:#005CC5;">Command</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;date&quot;</span><span style="color:#24292E;">).</span><span style="color:#005CC5;">CombinedOutput</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">		c.</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">, gin.H{</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: fmt.</span><span style="color:#005CC5;">Sprintf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> pong at </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">(date), </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">(hostname)),</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span>
<span class="line"><span style="color:#24292E;">	r.</span><span style="color:#005CC5;">Run</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// listen and serve on 0.0.0.0:8080</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>更新<code>mod</code>依赖</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mod</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tidy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mod</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tidy</span></span></code></pre></div><p>阶段式构建<code>Dockerfile</code></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">FROM golang:alpine as builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">WORKDIR </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">work</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ADD </span><span style="color:#F97583;">go</span><span style="color:#E1E4E8;">.mod .</span></span>
<span class="line"><span style="color:#E1E4E8;">ADD </span><span style="color:#F97583;">go</span><span style="color:#E1E4E8;">.sum .</span></span>
<span class="line"><span style="color:#E1E4E8;">RUN </span><span style="color:#F97583;">go</span><span style="color:#E1E4E8;"> env </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">w GOPROXY</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">https:</span><span style="color:#6A737D;">//goproxy.cn,direct &amp;&amp; go mod download</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">ADD main.</span><span style="color:#F97583;">go</span><span style="color:#E1E4E8;"> .</span></span>
<span class="line"><span style="color:#E1E4E8;">RUN </span><span style="color:#F97583;">go</span><span style="color:#E1E4E8;"> build </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">o gin</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">demo .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">FROM alpine</span></span>
<span class="line"><span style="color:#E1E4E8;">WORKDIR </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">work</span></span>
<span class="line"><span style="color:#E1E4E8;">COPY </span><span style="color:#F97583;">--</span><span style="color:#E1E4E8;">from</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">builder </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">work</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">gin</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">demo .</span></span>
<span class="line"><span style="color:#E1E4E8;">RUN chmod </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">x gin</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">demo</span></span>
<span class="line"><span style="color:#E1E4E8;">ENTRYPOINT [</span><span style="color:#9ECBFF;">&quot;./gin-demo&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">FROM golang:alpine as builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">WORKDIR </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">work</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ADD </span><span style="color:#D73A49;">go</span><span style="color:#24292E;">.mod .</span></span>
<span class="line"><span style="color:#24292E;">ADD </span><span style="color:#D73A49;">go</span><span style="color:#24292E;">.sum .</span></span>
<span class="line"><span style="color:#24292E;">RUN </span><span style="color:#D73A49;">go</span><span style="color:#24292E;"> env </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">w GOPROXY</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">https:</span><span style="color:#6A737D;">//goproxy.cn,direct &amp;&amp; go mod download</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">ADD main.</span><span style="color:#D73A49;">go</span><span style="color:#24292E;"> .</span></span>
<span class="line"><span style="color:#24292E;">RUN </span><span style="color:#D73A49;">go</span><span style="color:#24292E;"> build </span><span style="color:#D73A49;">-</span><span style="color:#24292E;">o gin</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">demo .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">FROM alpine</span></span>
<span class="line"><span style="color:#24292E;">WORKDIR </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">work</span></span>
<span class="line"><span style="color:#24292E;">COPY </span><span style="color:#D73A49;">--</span><span style="color:#24292E;">from</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">builder </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">work</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">gin</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">demo .</span></span>
<span class="line"><span style="color:#24292E;">RUN chmod </span><span style="color:#D73A49;">+</span><span style="color:#24292E;">x gin</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">demo</span></span>
<span class="line"><span style="color:#24292E;">ENTRYPOINT [</span><span style="color:#032F62;">&quot;./gin-demo&quot;</span><span style="color:#24292E;">]</span></span></code></pre></div><p>开始构建镜像<code>gin-demo</code></p><p><strong>下面采用的<code>dockerhub</code>账号是<code>2976560783</code>，所以构建的镜像也需要包含该信息</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2976560783</span><span style="color:#9ECBFF;">/gin-demo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2976560783</span><span style="color:#032F62;">/gin-demo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><p>登录<code>dockerhub</code>并推送该镜像</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">login</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2976560783</span><span style="color:#9ECBFF;">/gin-demo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">login</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2976560783</span><span style="color:#032F62;">/gin-demo</span></span></code></pre></div><h4 id="gin-web服务" tabindex="-1"><code>gin web</code>服务 <a class="header-anchor" href="#gin-web服务" aria-label="Permalink to &quot;\`gin web\`服务&quot;">​</a></h4><p>构建<code>k8s</code>的<code>Deployment</code>资源<code>yaml</code>配置文件<code>gin-demo.yaml</code></p><p>需要注意修改下面<code>image: </code>参数的值，配置3实例</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">replicas</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">matchLabels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">template</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">containers</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        - </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">2976560783/gin-demo:latest</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">imagePullPolicy</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">IfNotPresent</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            - </span><span style="color:#85E89D;">containerPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">apps/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Deployment</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">replicas</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">matchLabels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">template</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">containers</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        - </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">2976560783/gin-demo:latest</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">imagePullPolicy</span><span style="color:#24292E;">: </span><span style="color:#032F62;">IfNotPresent</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            - </span><span style="color:#22863A;">containerPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span></span></code></pre></div><p>应用该配置文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apply</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gin-demo.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apply</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gin-demo.yaml</span></span></code></pre></div><p>查看部署状态</p><p><strong>查看到<code>READY</code>栏下面是<code>2/2</code>，这个就是因为我们安装了<code>istio</code>的原因，<code>istio</code>会在每个服务<code>pod</code>中安装一个<code>Proxy</code></strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">kubectl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pods</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">wide</span></span>
<span class="line"><span style="color:#B392F0;">NAME</span><span style="color:#E1E4E8;">                       </span><span style="color:#9ECBFF;">READY</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">STATUS</span><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">RESTARTS</span><span style="color:#E1E4E8;">       </span><span style="color:#9ECBFF;">AGE</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">IP</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">NODE</span><span style="color:#E1E4E8;">               </span><span style="color:#9ECBFF;">NOMINATED</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">NODE</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">READINESS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GATES</span></span>
<span class="line"><span style="color:#B392F0;">gin-demo-d4659f67c-4vgjc</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">/2</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Running</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> (5m4s </span><span style="color:#9ECBFF;">ago</span><span style="color:#E1E4E8;">)   15h   10.42.0.36   demo-server-node   </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">gin-demo-d4659f67c-7zcn6</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">/2</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Running</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> (5m4s </span><span style="color:#9ECBFF;">ago</span><span style="color:#E1E4E8;">)   15h   10.42.0.40   demo-server-node   </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">gin-demo-d4659f67c-j8xvn</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">/2</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">Running</span><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> (5m4s </span><span style="color:#9ECBFF;">ago</span><span style="color:#E1E4E8;">)   15h   10.42.0.41   demo-server-node   </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">none</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">kubectl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pods</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#032F62;">wide</span></span>
<span class="line"><span style="color:#6F42C1;">NAME</span><span style="color:#24292E;">                       </span><span style="color:#032F62;">READY</span><span style="color:#24292E;">   </span><span style="color:#032F62;">STATUS</span><span style="color:#24292E;">    </span><span style="color:#032F62;">RESTARTS</span><span style="color:#24292E;">       </span><span style="color:#032F62;">AGE</span><span style="color:#24292E;">   </span><span style="color:#032F62;">IP</span><span style="color:#24292E;">           </span><span style="color:#032F62;">NODE</span><span style="color:#24292E;">               </span><span style="color:#032F62;">NOMINATED</span><span style="color:#24292E;"> </span><span style="color:#032F62;">NODE</span><span style="color:#24292E;">   </span><span style="color:#032F62;">READINESS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GATES</span></span>
<span class="line"><span style="color:#6F42C1;">gin-demo-d4659f67c-4vgjc</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">/2</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Running</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> (5m4s </span><span style="color:#032F62;">ago</span><span style="color:#24292E;">)   15h   10.42.0.36   demo-server-node   </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">           </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">gin-demo-d4659f67c-7zcn6</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">/2</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Running</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> (5m4s </span><span style="color:#032F62;">ago</span><span style="color:#24292E;">)   15h   10.42.0.40   demo-server-node   </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">           </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">gin-demo-d4659f67c-j8xvn</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#032F62;">/2</span><span style="color:#24292E;">     </span><span style="color:#032F62;">Running</span><span style="color:#24292E;">   </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> (5m4s </span><span style="color:#032F62;">ago</span><span style="color:#24292E;">)   15h   10.42.0.41   demo-server-node   </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">           </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">none</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>可以看到部署的<code>pod</code>会产生几个<code>IP</code>，是由虚拟网卡产生的设备内部的<code>NAT IP</code>地址</p><p>测试<code>k8s</code>设备机器访问服务(从其他设备是无法远程访问到<code>10.42.0.24</code>的)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://10.42.0.36:8080/ping</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;message&quot;:&quot;Fri Oct 20 01:24:56 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://10.42.0.36:8080/ping</span></span>
<span class="line"><span style="color:#24292e;">{&quot;message&quot;:&quot;Fri Oct 20 01:24:56 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre></div><p>但是我们目前的服务是不具备负载均衡的，同时我们的<code>Pod</code>也可能随时会被<code>k8s</code>关闭重启</p><h4 id="service负载均衡" tabindex="-1"><code>Service</code>负载均衡 <a class="header-anchor" href="#service负载均衡" aria-label="Permalink to &quot;\`Service\`负载均衡&quot;">​</a></h4><p>创建一个<code>gin-demo-service.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span></code></pre></div><p>应用<code>kubectl apply -f gin-demo-service.yaml</code></p><p>该<code>Service</code>会依据<code>spec.selector:</code>参数定义的匹配规则，把流量定向到<code>Deployment</code>资源的<code>metadata.labels</code>参数相同的资源上</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl get service -o wide</span></span>
<span class="line"><span style="color:#e1e4e8;">NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">gin-demo     ClusterIP   10.43.45.69   &lt;none&gt;        8080/TCP   15h</span></span>
<span class="line"><span style="color:#e1e4e8;">kubernetes   ClusterIP   10.43.0.1     &lt;none&gt;        443/TCP    22h</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl get service -o wide</span></span>
<span class="line"><span style="color:#24292e;">NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE</span></span>
<span class="line"><span style="color:#24292e;">gin-demo     ClusterIP   10.43.45.69   &lt;none&gt;        8080/TCP   15h</span></span>
<span class="line"><span style="color:#24292e;">kubernetes   ClusterIP   10.43.0.1     &lt;none&gt;        443/TCP    22h</span></span></code></pre></div><p>现在可以多次执行如下命令，会发现获取的返回值会随机来源于某个<code>Pod gin-demo</code>（<strong><code>ip</code>的值与<code>gin demo service</code>的值保持一致</strong>）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://10.43.45.69:8080/ping</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://10.43.45.69:8080/ping</span></span></code></pre></div><p>现在进入到任意一个节点的<code>pod</code>内部执行命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl exec -it gin-demo-d4659f67c-4vgjc -- sh</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl exec -it gin-demo-d4659f67c-4vgjc -- sh</span></span></code></pre></div><p>访问域名<code>gin-demo</code>，输出如下，运行多次，发现域名被映射为服务<code>gin-demo</code>，访问多次可以看到负载均衡的效果</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ wget http://gin-demo:8080/ping -O - |cat</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Connecting to gin-demo:8080 (10.43.50.108:8080)</span></span>
<span class="line"><span style="color:#e1e4e8;">writing to stdout</span></span>
<span class="line"><span style="color:#e1e4e8;">-                    100% |**************************************************************************************************************************************|    80  0:00:00 ETA</span></span>
<span class="line"><span style="color:#e1e4e8;">written to stdout</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;message&quot;:&quot;Wed Oct 18 09:46:42 UTC 2023\\n pong at gin-demo-69d5b4d649-j8xvn\\n&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ wget http://gin-demo:8080/ping -O - |cat</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Connecting to gin-demo:8080 (10.43.50.108:8080)</span></span>
<span class="line"><span style="color:#24292e;">writing to stdout</span></span>
<span class="line"><span style="color:#24292e;">-                    100% |**************************************************************************************************************************************|    80  0:00:00 ETA</span></span>
<span class="line"><span style="color:#24292e;">written to stdout</span></span>
<span class="line"><span style="color:#24292e;">{&quot;message&quot;:&quot;Wed Oct 18 09:46:42 UTC 2023\\n pong at gin-demo-69d5b4d649-j8xvn\\n&quot;}</span></span></code></pre></div><p>现在确定可以从设备内部网络访问<code>service</code>可以实现动态的负载均衡</p><h4 id="ingress外部设备访问" tabindex="-1"><code>Ingress</code>外部设备访问 <a class="header-anchor" href="#ingress外部设备访问" aria-label="Permalink to &quot;\`Ingress\`外部设备访问&quot;">​</a></h4><p>目前<code>service</code>和<code>pod</code>都不能被外部网络设备访问，所以就需要配置一个<code>ingress</code></p><p>整体架构</p><p><img src="`+o+`" alt="istio-k8s-arch"></p><p>创建一个<code>gin-demo-ingress.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gateway</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">annotations</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">kubernetes.io/ingress.class</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;nginx&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/$2</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rules</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">http</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">paths</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          - </span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/api/v1(/|$)(.*)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">pathType</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">ImplementationSpecific</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#85E89D;">backend</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">              </span><span style="color:#85E89D;">service</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">networking.k8s.io/v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Ingress</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gateway</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">annotations</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">kubernetes.io/ingress.class</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;nginx&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">nginx.ingress.kubernetes.io/rewrite-target</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/$2</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rules</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">http</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#22863A;">paths</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">          - </span><span style="color:#22863A;">path</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/api/v1(/|$)(.*)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">pathType</span><span style="color:#24292E;">: </span><span style="color:#032F62;">ImplementationSpecific</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#22863A;">backend</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">              </span><span style="color:#22863A;">service</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#22863A;">port</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span></span></code></pre></div><p>应用<code>ingress</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl apply -f gin-demo-ingress.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl apply -f gin-demo-ingress.yaml</span></span></code></pre></div><p>查看<code>ingress</code>的状态</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl get ingresses</span></span>
<span class="line"><span style="color:#e1e4e8;">NAME      CLASS    HOSTS   ADDRESS         PORTS   AGE</span></span>
<span class="line"><span style="color:#e1e4e8;">gateway   &lt;none&gt;   *       172.16.67.147   80      15h</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl get ingresses</span></span>
<span class="line"><span style="color:#24292e;">NAME      CLASS    HOSTS   ADDRESS         PORTS   AGE</span></span>
<span class="line"><span style="color:#24292e;">gateway   &lt;none&gt;   *       172.16.67.147   80      15h</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl describe ingresses</span></span>
<span class="line"><span style="color:#e1e4e8;">Name:             gateway</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:           &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:        default</span></span>
<span class="line"><span style="color:#e1e4e8;">Address:          172.16.67.147</span></span>
<span class="line"><span style="color:#e1e4e8;">Ingress Class:    &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Default backend:  &lt;default&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Rules:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Host        Path  Backends</span></span>
<span class="line"><span style="color:#e1e4e8;">  ----        ----  --------</span></span>
<span class="line"><span style="color:#e1e4e8;">  *           </span></span>
<span class="line"><span style="color:#e1e4e8;">              /api/v1(/|$)(.*)   gin-demo:http (10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080)</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:  kubernetes.io/ingress.class: nginx</span></span>
<span class="line"><span style="color:#e1e4e8;">              nginx.ingress.kubernetes.io/rewrite-target: /$2</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:</span></span>
<span class="line"><span style="color:#e1e4e8;">  Type    Reason  Age                From                      Message</span></span>
<span class="line"><span style="color:#e1e4e8;">  ----    ------  ----               ----                      -------</span></span>
<span class="line"><span style="color:#e1e4e8;">  Normal  Sync    15h (x2 over 15h)  nginx-ingress-controller  Scheduled for sync</span></span>
<span class="line"><span style="color:#e1e4e8;">  Normal  Sync    19m                nginx-ingress-controller  Scheduled for sync</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl describe ingresses</span></span>
<span class="line"><span style="color:#24292e;">Name:             gateway</span></span>
<span class="line"><span style="color:#24292e;">Labels:           &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Namespace:        default</span></span>
<span class="line"><span style="color:#24292e;">Address:          172.16.67.147</span></span>
<span class="line"><span style="color:#24292e;">Ingress Class:    &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Default backend:  &lt;default&gt;</span></span>
<span class="line"><span style="color:#24292e;">Rules:</span></span>
<span class="line"><span style="color:#24292e;">  Host        Path  Backends</span></span>
<span class="line"><span style="color:#24292e;">  ----        ----  --------</span></span>
<span class="line"><span style="color:#24292e;">  *           </span></span>
<span class="line"><span style="color:#24292e;">              /api/v1(/|$)(.*)   gin-demo:http (10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080)</span></span>
<span class="line"><span style="color:#24292e;">Annotations:  kubernetes.io/ingress.class: nginx</span></span>
<span class="line"><span style="color:#24292e;">              nginx.ingress.kubernetes.io/rewrite-target: /$2</span></span>
<span class="line"><span style="color:#24292e;">Events:</span></span>
<span class="line"><span style="color:#24292e;">  Type    Reason  Age                From                      Message</span></span>
<span class="line"><span style="color:#24292e;">  ----    ------  ----               ----                      -------</span></span>
<span class="line"><span style="color:#24292e;">  Normal  Sync    15h (x2 over 15h)  nginx-ingress-controller  Scheduled for sync</span></span>
<span class="line"><span style="color:#24292e;">  Normal  Sync    19m                nginx-ingress-controller  Scheduled for sync</span></span></code></pre></div><p>表明在访问<code>http</code>路径有前缀<code>/api/v1</code>的时候，请求会被转发到<code>gin-demo</code>的<code>service</code>，之后再被负载转发到<code>deployment</code></p><p>接下去从另外一台设备进行访问，多次访问的结果<code>pong at</code>后面的数据是会变化的</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.16.67.147/api/v1/ping</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;message&quot;:&quot;Fri Oct 20 01:42:22 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.16.67.147/api/v1/ping</span></span>
<span class="line"><span style="color:#24292e;">{&quot;message&quot;:&quot;Fri Oct 20 01:42:22 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre></div><h4 id="service-nodetype类型外部访问" tabindex="-1"><code>Service NodeType</code>类型外部访问 <a class="header-anchor" href="#service-nodetype类型外部访问" aria-label="Permalink to &quot;\`Service NodeType\`类型外部访问&quot;">​</a></h4><p>有些时候我们不希望使用<code>ingress</code>，比如想换一个外部网络访问端口</p><p>创建一个<code>gin-demo-nodeport.yaml</code></p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">apiVersion</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">v1</span></span>
<span class="line"><span style="color:#85E89D;">kind</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">Service</span></span>
<span class="line"><span style="color:#85E89D;">metadata</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo-node-port</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">labels</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span>
<span class="line"><span style="color:#85E89D;">spec</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">type</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">NodePort</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">http</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">protocol</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">TCP</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">targetPort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">8080</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">nodePort</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">31001</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">selector</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">app</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">gin-demo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">apiVersion</span><span style="color:#24292E;">: </span><span style="color:#032F62;">v1</span></span>
<span class="line"><span style="color:#22863A;">kind</span><span style="color:#24292E;">: </span><span style="color:#032F62;">Service</span></span>
<span class="line"><span style="color:#22863A;">metadata</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo-node-port</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">labels</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span>
<span class="line"><span style="color:#22863A;">spec</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">NodePort</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">http</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">protocol</span><span style="color:#24292E;">: </span><span style="color:#032F62;">TCP</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">targetPort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">8080</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">nodePort</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">31001</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">selector</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">app</span><span style="color:#24292E;">: </span><span style="color:#032F62;">gin-demo</span></span></code></pre></div><p>上述配置文件指定<code>type: NodePort</code>，<code>spec.ports[0].nodePort</code></p><p>其中<code>nodePort</code>可选值是<code>30000-32767</code>，上面的配置参数表示在宿主机上开放一个<code>31001</code>端口，可以被远程设备访问</p><p>应用该配置文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl apply -f gin-demo-nodeport.yaml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl apply -f gin-demo-nodeport.yaml</span></span></code></pre></div><p>查看<code>service</code>状态</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ kubectl describe svc gin</span></span>
<span class="line"><span style="color:#e1e4e8;">Name:              gin-demo</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:         default</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:            app=gin-demo</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:          app=gin-demo</span></span>
<span class="line"><span style="color:#e1e4e8;">Type:              ClusterIP</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Family Policy:  SingleStack</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Families:       IPv4</span></span>
<span class="line"><span style="color:#e1e4e8;">IP:                10.43.86.114</span></span>
<span class="line"><span style="color:#e1e4e8;">IPs:               10.43.86.114</span></span>
<span class="line"><span style="color:#e1e4e8;">Port:              http  8080/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">TargetPort:        8080/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">Endpoints:         10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080</span></span>
<span class="line"><span style="color:#e1e4e8;">Session Affinity:  None</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:            &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Name:                     gin-demo-node-port</span></span>
<span class="line"><span style="color:#e1e4e8;">Namespace:                default</span></span>
<span class="line"><span style="color:#e1e4e8;">Labels:                   app=gin-demo</span></span>
<span class="line"><span style="color:#e1e4e8;">Annotations:              &lt;none&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">Selector:                 app=gin-demo</span></span>
<span class="line"><span style="color:#e1e4e8;">Type:                     NodePort</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Family Policy:         SingleStack</span></span>
<span class="line"><span style="color:#e1e4e8;">IP Families:              IPv4</span></span>
<span class="line"><span style="color:#e1e4e8;">IP:                       10.43.4.171</span></span>
<span class="line"><span style="color:#e1e4e8;">IPs:                      10.43.4.171</span></span>
<span class="line"><span style="color:#e1e4e8;">Port:                     http  8080/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">TargetPort:               8080/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">NodePort:                 http  31001/TCP</span></span>
<span class="line"><span style="color:#e1e4e8;">Endpoints:                10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080</span></span>
<span class="line"><span style="color:#e1e4e8;">Session Affinity:         None</span></span>
<span class="line"><span style="color:#e1e4e8;">External Traffic Policy:  Cluster</span></span>
<span class="line"><span style="color:#e1e4e8;">Events:                   &lt;none&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ kubectl describe svc gin</span></span>
<span class="line"><span style="color:#24292e;">Name:              gin-demo</span></span>
<span class="line"><span style="color:#24292e;">Namespace:         default</span></span>
<span class="line"><span style="color:#24292e;">Labels:            app=gin-demo</span></span>
<span class="line"><span style="color:#24292e;">Annotations:       &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Selector:          app=gin-demo</span></span>
<span class="line"><span style="color:#24292e;">Type:              ClusterIP</span></span>
<span class="line"><span style="color:#24292e;">IP Family Policy:  SingleStack</span></span>
<span class="line"><span style="color:#24292e;">IP Families:       IPv4</span></span>
<span class="line"><span style="color:#24292e;">IP:                10.43.86.114</span></span>
<span class="line"><span style="color:#24292e;">IPs:               10.43.86.114</span></span>
<span class="line"><span style="color:#24292e;">Port:              http  8080/TCP</span></span>
<span class="line"><span style="color:#24292e;">TargetPort:        8080/TCP</span></span>
<span class="line"><span style="color:#24292e;">Endpoints:         10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080</span></span>
<span class="line"><span style="color:#24292e;">Session Affinity:  None</span></span>
<span class="line"><span style="color:#24292e;">Events:            &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Name:                     gin-demo-node-port</span></span>
<span class="line"><span style="color:#24292e;">Namespace:                default</span></span>
<span class="line"><span style="color:#24292e;">Labels:                   app=gin-demo</span></span>
<span class="line"><span style="color:#24292e;">Annotations:              &lt;none&gt;</span></span>
<span class="line"><span style="color:#24292e;">Selector:                 app=gin-demo</span></span>
<span class="line"><span style="color:#24292e;">Type:                     NodePort</span></span>
<span class="line"><span style="color:#24292e;">IP Family Policy:         SingleStack</span></span>
<span class="line"><span style="color:#24292e;">IP Families:              IPv4</span></span>
<span class="line"><span style="color:#24292e;">IP:                       10.43.4.171</span></span>
<span class="line"><span style="color:#24292e;">IPs:                      10.43.4.171</span></span>
<span class="line"><span style="color:#24292e;">Port:                     http  8080/TCP</span></span>
<span class="line"><span style="color:#24292e;">TargetPort:               8080/TCP</span></span>
<span class="line"><span style="color:#24292e;">NodePort:                 http  31001/TCP</span></span>
<span class="line"><span style="color:#24292e;">Endpoints:                10.42.0.36:8080,10.42.0.40:8080,10.42.0.41:8080</span></span>
<span class="line"><span style="color:#24292e;">Session Affinity:         None</span></span>
<span class="line"><span style="color:#24292e;">External Traffic Policy:  Cluster</span></span>
<span class="line"><span style="color:#24292e;">Events:                   &lt;none&gt;</span></span></code></pre></div><p>可以看到，两个不同的<code>service</code>的<code>Endpoints</code>是一样的，<code>gin-demo-node-port</code>还可以远程访问</p><p>在另外一台设备访问</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.16.67.147:31001/ping </span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;message&quot;:&quot;Fri Oct 20 03:22:53 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.16.67.147:31001/ping </span></span>
<span class="line"><span style="color:#24292e;">{&quot;message&quot;:&quot;Fri Oct 20 03:22:53 UTC 2023\\n pong at gin-demo-d4659f67c-4vgjc\\n&quot;}</span></span></code></pre></div><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://www.cnblogs.com/xishuai/p/microservices-and-service-mesh.html" target="_blank" rel="noreferrer">服务（<code>Microservices</code>）和服务网格（<code>Service Mesh</code>）架构概念整理 </a></p><p><a href="https://jimmysong.io/kubernetes-handbook/usecases/istio.html" target="_blank" rel="noreferrer"><code>jimmysong Istio</code>概述</a></p><p><a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/ingress/" target="_blank" rel="noreferrer"><code>k8s ingress</code>官方文档</a></p><p><a href="https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/" target="_blank" rel="noreferrer"><code>k8s service</code>官方文档</a></p>`,132),t=[c];function r(i,y,E,d,g,h){return n(),a("div",null,t)}const m=s(e,[["render",r]]);export{F as __pageData,m as default};
