import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.ec8f7e8e.js";const h=JSON.parse('{"title":"需求","description":"","frontmatter":{},"headers":[],"relativePath":"published/monitor-collector/容器环境下使用glances监控系统资源.md","filePath":"published/monitor-collector/容器环境下使用glances监控系统资源.md"}'),n={name:"published/monitor-collector/容器环境下使用glances监控系统资源.md"},l=o(`<h1 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h1><p>当后端服务进入容器之后，有些读取系统资源状态的结果可能会因为容器命名空间的原因而产生错误</p><p>最明显的就是读取<code>IP</code>信息的时候会直接读取后端容器的<code>IP</code>，在容器当中不管是采用<code>ifconfig</code>方式还是采用代码<code>psutil</code>方式读取，都是只能读取容器<code>IP</code>,所以就产生了一个需求，需要一个强大的系统资源监控</p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><p>使用一个开源完整的资源监控项目，目前<code>github</code>标星<code>20k+</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/nicolargo/glances</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/nicolargo/glances</span></span></code></pre></div><p>项目可以使用<code>pip</code>和<code>docker</code>版本安装，本方案采用<code>docker</code>安装，也可以使用<code>pip</code>安装体验一下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ pip install glances</span></span>
<span class="line"><span style="color:#e1e4e8;">$ python -m glances</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ pip install glances</span></span>
<span class="line"><span style="color:#24292e;">$ python -m glances</span></span></code></pre></div><p><img src="https://raw.githubusercontent.com/nicolargo/glances/develop/docs/_static/glances-summary.png" alt="glances-summary"></p><p>监控的指标包括以下<code>CPU</code>，磁盘，内存，磁盘读写速度，进程信息，内网公网<code>IP</code>,网口网速，容器服务，电池<code>CPU</code>温度，内核版本，启动时间等等</p><h2 id="docker实现" tabindex="-1"><code>docker</code>实现 <a class="header-anchor" href="#docker实现" aria-label="Permalink to &quot;\`docker\`实现&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker run --rm -v /var/run/docker.sock:/var/run/docker.sock:ro --pid host --network host -it nicolargo/glances</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker run --rm -v /var/run/docker.sock:/var/run/docker.sock:ro --pid host --network host -it nicolargo/glances</span></span></code></pre></div><h2 id="docker-compose实现" tabindex="-1"><code>docker compose实现</code> <a class="header-anchor" href="#docker-compose实现" aria-label="Permalink to &quot;\`docker compose实现\`&quot;">​</a></h2><p>新建<code>compose.yaml</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">services:</span></span>
<span class="line"><span style="color:#e1e4e8;">  glances:</span></span>
<span class="line"><span style="color:#e1e4e8;">    image: nicolargo/glances:latest-full</span></span>
<span class="line"><span style="color:#e1e4e8;">    container_name: demo-glances</span></span>
<span class="line"><span style="color:#e1e4e8;">    restart: always</span></span>
<span class="line"><span style="color:#e1e4e8;">    pid: host</span></span>
<span class="line"><span style="color:#e1e4e8;">    volumes:</span></span>
<span class="line"><span style="color:#e1e4e8;">      - /var/run/docker.sock:/var/run/docker.sock:ro</span></span>
<span class="line"><span style="color:#e1e4e8;">    command: /bin/sh -c &quot;python3 -m glances -w --disable-webui --bind 172.17.0.1&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">    network_mode: host</span></span>
<span class="line"><span style="color:#e1e4e8;">    healthcheck:</span></span>
<span class="line"><span style="color:#e1e4e8;">      test: curl http://172.17.0.1:61208/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">services:</span></span>
<span class="line"><span style="color:#24292e;">  glances:</span></span>
<span class="line"><span style="color:#24292e;">    image: nicolargo/glances:latest-full</span></span>
<span class="line"><span style="color:#24292e;">    container_name: demo-glances</span></span>
<span class="line"><span style="color:#24292e;">    restart: always</span></span>
<span class="line"><span style="color:#24292e;">    pid: host</span></span>
<span class="line"><span style="color:#24292e;">    volumes:</span></span>
<span class="line"><span style="color:#24292e;">      - /var/run/docker.sock:/var/run/docker.sock:ro</span></span>
<span class="line"><span style="color:#24292e;">    command: /bin/sh -c &quot;python3 -m glances -w --disable-webui --bind 172.17.0.1&quot;</span></span>
<span class="line"><span style="color:#24292e;">    network_mode: host</span></span>
<span class="line"><span style="color:#24292e;">    healthcheck:</span></span>
<span class="line"><span style="color:#24292e;">      test: curl http://172.17.0.1:61208/</span></span></code></pre></div><p>参数</p><p><code>image</code></p><ul><li><code>nicolargo/glances:latest-full</code>采用最新版本镜像，如果追求更小的镜像可以选择标签<code>alpine-latest</code></li></ul><p><code>pid</code></p><ul><li><code>host</code>参数表示使用宿主机进程命名空间，这样可以准确读取到宿主机其他进程信息</li></ul><p><code>volumes</code></p><ul><li><code>/var/run/docker.sock:/var/run/docker.sock:ro</code>只读方式把<code>docker</code>的<code>socket</code>挂载进入容器确保可以正常读取宿主机容器状态</li></ul><p><code>command</code>下的<code>glances</code>参数</p><ul><li><code>-w</code>表示使用<code>web</code>服务器模式</li><li><code>--disable-webui</code>表示关闭<code>web</code>服务接口，只留下<code>Restful</code>服务</li><li><code>--bind 172.17.0.1</code>表示服务地址绑定到这个<code>IP</code>地址，该<code>IP</code>地址是固定的，详细解释查看下文<code>docker</code>桥接网络模式部分</li></ul><p><code>network_mode</code></p><ul><li><code>host</code>表示使用宿主机网络命名空间</li></ul><p><code>healthcheck</code></p><ul><li>表示进行容器健康状态检查，<code>glances</code>默认使用<code>61208</code>端口</li></ul><p>服务启动</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker compose up -d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker compose up -d</span></span></code></pre></div><h2 id="测试访问" tabindex="-1">测试访问 <a class="header-anchor" href="#测试访问" aria-label="Permalink to &quot;测试访问&quot;">​</a></h2><p>容器内访问和容器外访问<code>url</code>都是一样的</p><p>访问之后的返回响应的值会依据用户网络情况变化</p><h4 id="glances的restful服务" tabindex="-1"><code>glances</code>的<code>restful</code>服务 <a class="header-anchor" href="#glances的restful服务" aria-label="Permalink to &quot;\`glances\`的\`restful\`服务&quot;">​</a></h4><ul><li><p><code>glances</code>的<code>Restful</code>服务默认监听<code>61208</code>端口</p></li><li><p>通过访问<code>IP</code>地址<code>172.17.0.1</code>进行访问</p></li></ul><h4 id="测试容器外部访问" tabindex="-1">测试容器外部访问 <a class="header-anchor" href="#测试容器外部访问" aria-label="Permalink to &quot;测试容器外部访问&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#24292e;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre></div><h4 id="测试其他容器的容器内部访问" tabindex="-1">测试其他容器的容器内部访问 <a class="header-anchor" href="#测试其他容器的容器内部访问" aria-label="Permalink to &quot;测试其他容器的容器内部访问&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker run curlimages/curl /bin/sh -c &quot;curl http://172.17.0.1:61208/api/3/ip&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span>
<span class="line"><span style="color:#e1e4e8;">                                 Dload  Upload   Total   Spent    Left  Speed</span></span>
<span class="line"><span style="color:#e1e4e8;">100   127  100   127    0     0    648      0 --:--:-- --:--:-- --:--:--   651</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">或者也可以先进入容器之后执行</span></span>
<span class="line"><span style="color:#e1e4e8;">$ docker run -it curlimages/curl /bin/sh</span></span>
<span class="line"><span style="color:#e1e4e8;">/ $ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker run curlimages/curl /bin/sh -c &quot;curl http://172.17.0.1:61208/api/3/ip&quot;</span></span>
<span class="line"><span style="color:#24292e;">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span>
<span class="line"><span style="color:#24292e;">                                 Dload  Upload   Total   Spent    Left  Speed</span></span>
<span class="line"><span style="color:#24292e;">100   127  100   127    0     0    648      0 --:--:-- --:--:-- --:--:--   651</span></span>
<span class="line"><span style="color:#24292e;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">或者也可以先进入容器之后执行</span></span>
<span class="line"><span style="color:#24292e;">$ docker run -it curlimages/curl /bin/sh</span></span>
<span class="line"><span style="color:#24292e;">/ $ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#24292e;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre></div><h4 id="python代码方式使用" tabindex="-1"><code>python</code>代码方式使用 <a class="header-anchor" href="#python代码方式使用" aria-label="Permalink to &quot;\`python\`代码方式使用&quot;">​</a></h4><p>创建文件<code>demo.py</code>写入如下</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> requests</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;__main__&#39;</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;http://172.17.0.1:61208/api/3/ip&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">    response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> requests.get(</span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">url).json()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(response)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> requests</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;__main__&#39;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;http://172.17.0.1:61208/api/3/ip&#39;</span></span>
<span class="line"><span style="color:#24292E;">    response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> requests.get(</span><span style="color:#E36209;">url</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">url).json()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(response)</span></span></code></pre></div><p>如果有现成的<code>python</code>环境可以直接执行<code>python demo.py</code>查看结果</p><p>可以使用<code>python</code>镜像测试一下，使用<code>python:3-bullseye</code>的镜像，该镜像是使用最新<code>python</code>版本，进入容器后先安装依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker run -it python:3-bullseye /bin/bash</span></span>
<span class="line"><span style="color:#e1e4e8;">root@e81c69632d86:/# pip install requests -i https://mirrors.aliyun.com/pypi/simple/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker run -it python:3-bullseye /bin/bash</span></span>
<span class="line"><span style="color:#24292e;">root@e81c69632d86:/# pip install requests -i https://mirrors.aliyun.com/pypi/simple/</span></span></code></pre></div><p>安装完成之后写入文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">root@e81c69632d86:/# cat &gt; demo.py &lt;&lt;EOF</span></span>
<span class="line"><span style="color:#e1e4e8;">import requests</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">if __name__ == &#39;__main__&#39;:</span></span>
<span class="line"><span style="color:#e1e4e8;">    url = &#39;http://172.17.0.1:61208/api/3/ip&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">    response = requests.get(url=url).json()</span></span>
<span class="line"><span style="color:#e1e4e8;">    print(response)</span></span>
<span class="line"><span style="color:#e1e4e8;">EOF</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">root@e81c69632d86:/# cat &gt; demo.py &lt;&lt;EOF</span></span>
<span class="line"><span style="color:#24292e;">import requests</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">if __name__ == &#39;__main__&#39;:</span></span>
<span class="line"><span style="color:#24292e;">    url = &#39;http://172.17.0.1:61208/api/3/ip&#39;</span></span>
<span class="line"><span style="color:#24292e;">    response = requests.get(url=url).json()</span></span>
<span class="line"><span style="color:#24292e;">    print(response)</span></span>
<span class="line"><span style="color:#24292e;">EOF</span></span></code></pre></div><p>检查文件写入并且执行测试<code>glances</code>服务是否正常</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">root@e81c69632d86:/# cat demo.py</span></span>
<span class="line"><span style="color:#e1e4e8;">root@e81c69632d86:/# python demo.py</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">root@e81c69632d86:/# cat demo.py</span></span>
<span class="line"><span style="color:#24292e;">root@e81c69632d86:/# python demo.py</span></span></code></pre></div><h2 id="glances拓展" tabindex="-1"><code>glances</code>拓展 <a class="header-anchor" href="#glances拓展" aria-label="Permalink to &quot;\`glances\`拓展&quot;">​</a></h2><p>更详细文档参考<a href="https://glances.readthedocs.io/en/latest/api.html" target="_blank" rel="noreferrer"><code>glances</code>的<code>Restful</code>服务文档</a></p><p>该开源项目可以获取多种系统资源的信息，每个组件都被封装为一个模块插件</p><p>可以先获取服务所有的插件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/pluginslist</span></span>
<span class="line"><span style="color:#e1e4e8;">[&quot;folders&quot;, &quot;percpu&quot;, &quot;sensors&quot;, &quot;system&quot;, &quot;wifi&quot;, &quot;alert&quot;, &quot;docker&quot;, &quot;uptime&quot;, &quot;gpu&quot;, &quot;load&quot;, &quot;amps&quot;, &quot;connections&quot;, &quot;mem&quot;, &quot;cpu&quot;, &quot;fs&quot;, &quot;memswap&quot;, &quot;quicklook&quot;, &quot;processlist&quot;, &quot;help&quot;, &quot;ip&quot;, &quot;smart&quot;, &quot;network&quot;, &quot;irq&quot;, &quot;diskio&quot;, &quot;psutilversion&quot;, &quot;ports&quot;, &quot;now&quot;, &quot;cloud&quot;, &quot;processcount&quot;, &quot;core&quot;, &quot;raid&quot;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/pluginslist</span></span>
<span class="line"><span style="color:#24292e;">[&quot;folders&quot;, &quot;percpu&quot;, &quot;sensors&quot;, &quot;system&quot;, &quot;wifi&quot;, &quot;alert&quot;, &quot;docker&quot;, &quot;uptime&quot;, &quot;gpu&quot;, &quot;load&quot;, &quot;amps&quot;, &quot;connections&quot;, &quot;mem&quot;, &quot;cpu&quot;, &quot;fs&quot;, &quot;memswap&quot;, &quot;quicklook&quot;, &quot;processlist&quot;, &quot;help&quot;, &quot;ip&quot;, &quot;smart&quot;, &quot;network&quot;, &quot;irq&quot;, &quot;diskio&quot;, &quot;psutilversion&quot;, &quot;ports&quot;, &quot;now&quot;, &quot;cloud&quot;, &quot;processcount&quot;, &quot;core&quot;, &quot;raid&quot;]</span></span></code></pre></div><p>基本的<code>url</code>是<code>http://172.17.0.1:61208/api/3/{插件名称}</code></p><p>如果要指定更详细字段，<code>url</code>是<code>http://172.17.0.1:61208/api/3/{插件名称}/{字段的key值}</code></p><h4 id="ip插件" tabindex="-1"><code>IP</code>插件 <a class="header-anchor" href="#ip插件" aria-label="Permalink to &quot;\`IP\`插件&quot;">​</a></h4><p>获取<code>IP</code>信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/ip</span></span>
<span class="line"><span style="color:#24292e;">{&quot;address&quot;: &quot;10.30.6.24&quot;, &quot;mask&quot;: &quot;255.255.248.0&quot;, &quot;mask_cidr&quot;: 21, &quot;gateway&quot;: &quot;10.30.0.1&quot;, &quot;public_address&quot;: &quot;115.205.148.68&quot;}</span></span></code></pre></div><p>获取更详细具体的信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/ip/address</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;address&quot;: &quot;10.30.6.24&quot;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/ip/address</span></span>
<span class="line"><span style="color:#24292e;">{&quot;address&quot;: &quot;10.30.6.24&quot;}</span></span></code></pre></div><h4 id="diskio模块" tabindex="-1"><code>diskio</code>模块 <a class="header-anchor" href="#diskio模块" aria-label="Permalink to &quot;\`diskio\`模块&quot;">​</a></h4><p>获取所有硬盘信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/diskio</span></span>
<span class="line"><span style="color:#e1e4e8;">[{&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: &quot;loop0&quot;, &quot;read_count&quot;: 0, &quot;write_count&quot;: 0, &quot;read_bytes&quot;: 0, &quot;write_bytes&quot;: 0, &quot;key&quot;: &quot;disk_name&quot;}, {&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: &quot;loop1&quot;, &quot;read_count&quot;: 0, &quot;write_count&quot;: 0, &quot;read_bytes&quot;: 0, &quot;write_bytes&quot;: 0, &quot;key&quot;: &quot;disk_name&quot;}, {&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: ..............................</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/diskio</span></span>
<span class="line"><span style="color:#24292e;">[{&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: &quot;loop0&quot;, &quot;read_count&quot;: 0, &quot;write_count&quot;: 0, &quot;read_bytes&quot;: 0, &quot;write_bytes&quot;: 0, &quot;key&quot;: &quot;disk_name&quot;}, {&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: &quot;loop1&quot;, &quot;read_count&quot;: 0, &quot;write_count&quot;: 0, &quot;read_bytes&quot;: 0, &quot;write_bytes&quot;: 0, &quot;key&quot;: &quot;disk_name&quot;}, {&quot;time_since_update&quot;: 82.1883933544159, &quot;disk_name&quot;: ..............................</span></span></code></pre></div><p>只获取硬盘名称</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl http://172.17.0.1:61208/api/3/diskio/disk_name</span></span>
<span class="line"><span style="color:#e1e4e8;">{&quot;disk_name&quot;: [&quot;sda&quot;, &quot;sda1&quot;, &quot;sda2&quot;, &quot;sda3&quot;, &quot;sda4&quot;&quot;]}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl http://172.17.0.1:61208/api/3/diskio/disk_name</span></span>
<span class="line"><span style="color:#24292e;">{&quot;disk_name&quot;: [&quot;sda&quot;, &quot;sda1&quot;, &quot;sda2&quot;, &quot;sda3&quot;, &quot;sda4&quot;&quot;]}</span></span></code></pre></div><h2 id="docker桥接网络知识拓展" tabindex="-1"><code>docker</code>桥接网络知识拓展 <a class="header-anchor" href="#docker桥接网络知识拓展" aria-label="Permalink to &quot;\`docker\`桥接网络知识拓展&quot;">​</a></h2><h4 id="docker网络列表" tabindex="-1"><code>docker</code>网络列表 <a class="header-anchor" href="#docker网络列表" aria-label="Permalink to &quot;\`docker\`网络列表&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker network ls</span></span>
<span class="line"><span style="color:#e1e4e8;">90f665152266   bridge                  bridge    local</span></span>
<span class="line"><span style="color:#e1e4e8;">0812cab7929c   host                    host      local</span></span>
<span class="line"><span style="color:#e1e4e8;">089112aab72b   none                    null      local</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker network ls</span></span>
<span class="line"><span style="color:#24292e;">90f665152266   bridge                  bridge    local</span></span>
<span class="line"><span style="color:#24292e;">0812cab7929c   host                    host      local</span></span>
<span class="line"><span style="color:#24292e;">089112aab72b   none                    null      local</span></span></code></pre></div><h4 id="bridge网络" tabindex="-1"><code>bridge</code>网络 <a class="header-anchor" href="#bridge网络" aria-label="Permalink to &quot;\`bridge\`网络&quot;">​</a></h4><p>新建容器默认使用<code>bridge</code>模式，会在网桥<code>docker0</code>上为容器创建新的网络栈</p><p>查看<code>bridge</code>信息，<code>bridge</code>网络空间的默认网关是<code>172.17.0.1</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker network inspect bridge  </span></span>
<span class="line"><span style="color:#e1e4e8;">[</span></span>
<span class="line"><span style="color:#e1e4e8;">    {</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Name&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Id&quot;: &quot;90f6651522663d95f1a7e451026ed4c7b996115f70edd3493394681bc89f5d00&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Created&quot;: &quot;2022-07-02T10:14:08.205251857+08:00&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Scope&quot;: &quot;local&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Driver&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;EnableIPv6&quot;: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;IPAM&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;Driver&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;Options&quot;: null,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;Config&quot;: [</span></span>
<span class="line"><span style="color:#e1e4e8;">                {</span></span>
<span class="line"><span style="color:#e1e4e8;">                    &quot;Subnet&quot;: &quot;172.17.0.0/16&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">                }</span></span>
<span class="line"><span style="color:#e1e4e8;">            ]</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Internal&quot;: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Attachable&quot;: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Ingress&quot;: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;ConfigFrom&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;Network&quot;: &quot;&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;ConfigOnly&quot;: false,</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Containers&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;e81c69632d860104a60de7e1173332cca85887bf012dd072c3f002cb68561617&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">                &quot;Name&quot;: &quot;charming_dijkstra&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">                &quot;EndpointID&quot;: &quot;f4955572e6529a58acfe4076f8876f8ca022d997147254048fabb0779df1755e&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">                &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">                &quot;IPv4Address&quot;: &quot;172.17.0.2/16&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">                &quot;IPv6Address&quot;: &quot;&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">            }</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Options&quot;: {</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.bridge.default_bridge&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.bridge.enable_icc&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.bridge.enable_ip_masquerade&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.bridge.host_binding_ipv4&quot;: &quot;0.0.0.0&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.bridge.name&quot;: &quot;docker0&quot;,</span></span>
<span class="line"><span style="color:#e1e4e8;">            &quot;com.docker.network.driver.mtu&quot;: &quot;1500&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">        },</span></span>
<span class="line"><span style="color:#e1e4e8;">        &quot;Labels&quot;: {}</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker network inspect bridge  </span></span>
<span class="line"><span style="color:#24292e;">[</span></span>
<span class="line"><span style="color:#24292e;">    {</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Name&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Id&quot;: &quot;90f6651522663d95f1a7e451026ed4c7b996115f70edd3493394681bc89f5d00&quot;,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Created&quot;: &quot;2022-07-02T10:14:08.205251857+08:00&quot;,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Scope&quot;: &quot;local&quot;,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Driver&quot;: &quot;bridge&quot;,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;EnableIPv6&quot;: false,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;IPAM&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;Driver&quot;: &quot;default&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;Options&quot;: null,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;Config&quot;: [</span></span>
<span class="line"><span style="color:#24292e;">                {</span></span>
<span class="line"><span style="color:#24292e;">                    &quot;Subnet&quot;: &quot;172.17.0.0/16&quot;,</span></span>
<span class="line"><span style="color:#24292e;">                    &quot;Gateway&quot;: &quot;172.17.0.1&quot;</span></span>
<span class="line"><span style="color:#24292e;">                }</span></span>
<span class="line"><span style="color:#24292e;">            ]</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Internal&quot;: false,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Attachable&quot;: false,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Ingress&quot;: false,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;ConfigFrom&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;Network&quot;: &quot;&quot;</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;ConfigOnly&quot;: false,</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Containers&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;e81c69632d860104a60de7e1173332cca85887bf012dd072c3f002cb68561617&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">                &quot;Name&quot;: &quot;charming_dijkstra&quot;,</span></span>
<span class="line"><span style="color:#24292e;">                &quot;EndpointID&quot;: &quot;f4955572e6529a58acfe4076f8876f8ca022d997147254048fabb0779df1755e&quot;,</span></span>
<span class="line"><span style="color:#24292e;">                &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,</span></span>
<span class="line"><span style="color:#24292e;">                &quot;IPv4Address&quot;: &quot;172.17.0.2/16&quot;,</span></span>
<span class="line"><span style="color:#24292e;">                &quot;IPv6Address&quot;: &quot;&quot;</span></span>
<span class="line"><span style="color:#24292e;">            }</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Options&quot;: {</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.bridge.default_bridge&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.bridge.enable_icc&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.bridge.enable_ip_masquerade&quot;: &quot;true&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.bridge.host_binding_ipv4&quot;: &quot;0.0.0.0&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.bridge.name&quot;: &quot;docker0&quot;,</span></span>
<span class="line"><span style="color:#24292e;">            &quot;com.docker.network.driver.mtu&quot;: &quot;1500&quot;</span></span>
<span class="line"><span style="color:#24292e;">        },</span></span>
<span class="line"><span style="color:#24292e;">        &quot;Labels&quot;: {}</span></span>
<span class="line"><span style="color:#24292e;">    }</span></span>
<span class="line"><span style="color:#24292e;">]</span></span></code></pre></div><h4 id="host网络" tabindex="-1"><code>host</code>网络 <a class="header-anchor" href="#host网络" aria-label="Permalink to &quot;\`host\`网络&quot;">​</a></h4><p>容器和宿主机共享网络命名空间</p><h4 id="none网络" tabindex="-1"><code>none</code>网络 <a class="header-anchor" href="#none网络" aria-label="Permalink to &quot;\`none\`网络&quot;">​</a></h4><p>不配置网络，用户可以自行进入容器配置网络（不推荐使用）</p><h4 id="docker0配置" tabindex="-1"><code>docker0</code>配置 <a class="header-anchor" href="#docker0配置" aria-label="Permalink to &quot;\`docker0\`配置&quot;">​</a></h4><ul><li><p>只要安装了<code>docker</code>，就会有一个网卡<code>docker0</code></p></li><li><p><code>docker0</code>相当于一个路由器的作用</p></li><li><p>任何一个容器启动默认都是<code>docker0</code>网络，<code>docker</code>默认会给容器分配一个可用<code>ip</code>，并把它同<code>docke0</code>相连，使用到的就是<code>veth pair</code>技术</p></li><li><p><code>IP</code>地址是固定的，目前安装<code>docker</code>的时候默认配置的<code>IP</code>就是<code>172.17.0.1</code></p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ip addr show docker0</span></span>
<span class="line"><span style="color:#e1e4e8;">10: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span>
<span class="line"><span style="color:#e1e4e8;">    link/ether 02:42:5c:de:63:85 brd ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="color:#e1e4e8;">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span></span>
<span class="line"><span style="color:#e1e4e8;">       valid_lft forever preferred_lft forever</span></span>
<span class="line"><span style="color:#e1e4e8;">    inet6 fe80::42:5cff:fede:6385/64 scope link </span></span>
<span class="line"><span style="color:#e1e4e8;">       valid_lft forever preferred_lft forever</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ip addr show docker0</span></span>
<span class="line"><span style="color:#24292e;">10: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default </span></span>
<span class="line"><span style="color:#24292e;">    link/ether 02:42:5c:de:63:85 brd ff:ff:ff:ff:ff:ff</span></span>
<span class="line"><span style="color:#24292e;">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span></span>
<span class="line"><span style="color:#24292e;">       valid_lft forever preferred_lft forever</span></span>
<span class="line"><span style="color:#24292e;">    inet6 fe80::42:5cff:fede:6385/64 scope link </span></span>
<span class="line"><span style="color:#24292e;">       valid_lft forever preferred_lft forever</span></span></code></pre></div><p>目前关于<code>docker</code>网络技术比较复杂，从使用上最简单的描述就是当容器网络配置为<code>host</code>模式之后，可以在宿主机和其他容器内部通过访问<code>172.17.0.1</code>地址访问到这个容器</p><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://docs.docker.com/network/network-tutorial-standalone/" target="_blank" rel="noreferrer"><code>docker</code>桥接网络模式</a></p><p><a href="https://glances.readthedocs.io/en/latest/api.html" target="_blank" rel="noreferrer"><code>glances</code>的<code>Restful</code>服务文档</a></p><p><a href="https://www.modb.pro/db/388290" target="_blank" rel="noreferrer">深入理解<code>docker</code>网络原理</a></p>`,85),t=[l];function p(c,r,u,i,d,q){return e(),a("div",null,t)}const k=s(n,[["render",p]]);export{h as __pageData,k as default};
