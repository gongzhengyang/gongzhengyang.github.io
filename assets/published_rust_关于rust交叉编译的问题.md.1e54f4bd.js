import{_ as s,o as a,c as o,Q as n}from"./chunks/framework.36bc40e2.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"published/rust/关于rust交叉编译的问题.md","filePath":"published/rust/关于rust交叉编译的问题.md","lastUpdated":1693296118000}'),l={name:"published/rust/关于rust交叉编译的问题.md"},p=n(`<h2 id="rust交叉编译" tabindex="-1"><code>rust</code>交叉编译 <a class="header-anchor" href="#rust交叉编译" aria-label="Permalink to &quot;\`rust\`交叉编译&quot;">​</a></h2><p>纯粹的<code>rust</code>代码是很容易实现交叉编译，但是使用到的库中如果使用到<code>C/C++</code>，编译就会比较复杂，直接运行交叉编译命令如下，可能直接报错</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cargo build -r --target aarch64-apple-darwin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cargo build -r --target aarch64-apple-darwin</span></span></code></pre></div><p>交叉依赖于项目<code>https://github.com/cross-rs/cross</code></p><p>利用<code>docker</code>简化了在<code>x86_64</code>的<code>linux</code>操作系统上进行交叉编译时所需要的前置设置</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cargo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span></span></code></pre></div><p>该项目需要依赖<code>docker</code>或者<code>podman</code></p><p>获取镜像的时候由于是直接拉<code>ghcr.io/cross-rs/*</code>的镜像，所以国内配置的镜像是无法使用的，这个时候需要配置<code>docker</code>的代理服务才行</p><p>查看<code>docker</code>服务配置文件位置</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span>
<span class="line"><span style="color:#B392F0;">●</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker.service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Application</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Container</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Engine</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">Loaded:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">loaded</span><span style="color:#E1E4E8;"> (/lib/systemd/system/docker.service; </span><span style="color:#B392F0;">enabled</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">vendor</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">preset:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enabled</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span>
<span class="line"><span style="color:#6F42C1;">●</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker.service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Application</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Container</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Engine</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">Loaded:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">loaded</span><span style="color:#24292E;"> (/lib/systemd/system/docker.service; </span><span style="color:#6F42C1;">enabled</span><span style="color:#24292E;">; </span><span style="color:#6F42C1;">vendor</span><span style="color:#24292E;"> </span><span style="color:#032F62;">preset:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enabled</span><span style="color:#24292E;">)</span></span></code></pre></div><p>依据上面命令输出，修改文件<code>/lib/systemd/system/docker.service</code>配置<code>HTTP</code>代理，<strong>代理的参数值需要依据自己代理而调整</strong></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">Service</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">Environment=</span><span style="color:#9ECBFF;">&quot;HTTP_PROXY=http://127.0.0.1:20171&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">Environment=</span><span style="color:#9ECBFF;">&quot;HTTPS_PROXY=http://127.0.0.1:20171&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">Service</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">Environment=</span><span style="color:#032F62;">&quot;HTTP_PROXY=http://127.0.0.1:20171&quot;</span></span>
<span class="line"><span style="color:#24292E;">Environment=</span><span style="color:#032F62;">&quot;HTTPS_PROXY=http://127.0.0.1:20171&quot;</span></span></code></pre></div><p>重启服务</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">daemon-reload</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">restart</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">daemon-reload</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">systemctl</span><span style="color:#24292E;"> </span><span style="color:#032F62;">restart</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span></span></code></pre></div><h2 id="执行交叉编译" tabindex="-1">执行交叉编译 <a class="header-anchor" href="#执行交叉编译" aria-label="Permalink to &quot;执行交叉编译&quot;">​</a></h2><p>使用的时候需要把<code>cargo</code>替换为<code>cross</code>命令</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">x86_64-pc-windows-gnu</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">x86_64-pc-windows-gnu</span></span></code></pre></div><p>执行的时候会自动拉取一个镜像<code>ghcr.io/cross-rs/x86_64-pc-windows-gnu:{version}</code>，<code>version</code>参数的值是默认依据<code>cross</code>的版本号定的，比如执行命令如下，发现版本号是<code>0.2.5</code>，则对应的获取镜像是<code>ghcr.io/cross-rs/x86_64-pc-windows-gnu:0.2.5</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--version</span></span>
<span class="line"><span style="color:#B392F0;">cross</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0.2</span><span style="color:#9ECBFF;">.5</span></span>
<span class="line"><span style="color:#E1E4E8;">[cross] note: Falling back to </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">cargo</span><span style="color:#9ECBFF;">\`</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">host.</span></span>
<span class="line"><span style="color:#B392F0;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1.68</span><span style="color:#9ECBFF;">.0</span><span style="color:#E1E4E8;"> (115f34552 </span><span style="color:#79B8FF;">2023</span><span style="color:#9ECBFF;">-02-26</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--version</span></span>
<span class="line"><span style="color:#6F42C1;">cross</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0.2</span><span style="color:#032F62;">.5</span></span>
<span class="line"><span style="color:#24292E;">[cross] note: Falling back to </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">cargo</span><span style="color:#032F62;">\`</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">host.</span></span>
<span class="line"><span style="color:#6F42C1;">cargo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1.68</span><span style="color:#032F62;">.0</span><span style="color:#24292E;"> (115f34552 </span><span style="color:#005CC5;">2023</span><span style="color:#032F62;">-02-26</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="编译时候的报错解决" tabindex="-1">编译时候的报错解决 <a class="header-anchor" href="#编译时候的报错解决" aria-label="Permalink to &quot;编译时候的报错解决&quot;">​</a></h2><p>该错误一般会出现在<code>rust</code>以及第三方库版本非常新，但是<code>cross</code>的版本是比较久之前发布的</p><p>目前<code>cross</code>的版本是<code>0.2.5</code>，对应的<code>tag</code>值也是一样</p><p>编译过程当中会出现如下错误，表示找不到某个<code>GLIBC</code>版本</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">error: /lib/x86_64-linux-gnu/libc.so.6: version \`GLIBC_2.28&#39; not found (required by /target/release/deps/libfutures_macro-7a167e0564403030.so)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">error: /lib/x86_64-linux-gnu/libc.so.6: version \`GLIBC_2.28&#39; not found (required by /target/release/deps/libfutures_macro-7a167e0564403030.so)</span></span></code></pre></div><p>查看容器基础镜像信息</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ghcr.io/cross-rs/x86_64-pc-windows-gnu:0.2.5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/os-release</span></span>
<span class="line"><span style="color:#E1E4E8;">NAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Ubuntu&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">VERSION</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;18.04.6 LTS (Bionic Beaver)&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">VERSION_CODENAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">bionic</span></span>
<span class="line"><span style="color:#E1E4E8;">UBUNTU_CODENAME</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">bionic</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ghcr.io/cross-rs/x86_64-pc-windows-gnu:0.2.5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/etc/os-release</span></span>
<span class="line"><span style="color:#24292E;">NAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;Ubuntu&quot;</span></span>
<span class="line"><span style="color:#24292E;">VERSION</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;18.04.6 LTS (Bionic Beaver)&quot;</span></span>
<span class="line"><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">VERSION_CODENAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">bionic</span></span>
<span class="line"><span style="color:#24292E;">UBUNTU_CODENAME</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">bionic</span></span></code></pre></div><p>查看支持的<code>GLIBC</code>版本信息</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ghcr.io/cross-rs/x86_64-pc-windows-gnu:0.2.5</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">strings</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/lib/x86_64-linux-gnu/libc.so.6</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GLIBC</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_2.2.5</span></span>
<span class="line"><span style="color:#79B8FF;">....</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_2.24</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_2.25</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_2.26</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_2.27</span></span>
<span class="line"><span style="color:#B392F0;">GLIBC_PRIVATE</span></span>
<span class="line"><span style="color:#B392F0;">GNU</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Library</span><span style="color:#E1E4E8;"> (Ubuntu </span><span style="color:#9ECBFF;">GLIBC</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2.27</span><span style="color:#9ECBFF;">-3ubuntu1.6</span><span style="color:#E1E4E8;">) stable release version 2.27.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ghcr.io/cross-rs/x86_64-pc-windows-gnu:0.2.5</span><span style="color:#24292E;"> </span><span style="color:#032F62;">strings</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/lib/x86_64-linux-gnu/libc.so.6</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">GLIBC</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_2.2.5</span></span>
<span class="line"><span style="color:#005CC5;">....</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_2.24</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_2.25</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_2.26</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_2.27</span></span>
<span class="line"><span style="color:#6F42C1;">GLIBC_PRIVATE</span></span>
<span class="line"><span style="color:#6F42C1;">GNU</span><span style="color:#24292E;"> </span><span style="color:#032F62;">C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Library</span><span style="color:#24292E;"> (Ubuntu </span><span style="color:#032F62;">GLIBC</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2.27</span><span style="color:#032F62;">-3ubuntu1.6</span><span style="color:#24292E;">) stable release version 2.27.</span></span></code></pre></div><h4 id="解决步骤" tabindex="-1">解决步骤 <a class="header-anchor" href="#解决步骤" aria-label="Permalink to &quot;解决步骤&quot;">​</a></h4><ul><li><p>切换到项目<code>https://github.com/cross-rs/cross</code>的<code>tag v0.2.5</code>查看文件<code>cross/docker/Dockerfile.x86_64-pc-windows-gnu</code>发现第一行确实是<code>FROM ubuntu:18.04</code></p></li><li><p>这个时候浏览器直接访问地址<code>ghcr.io/cross-rs/x86_64-pc-windows-gnu</code>，会跳转到<code>https://github.com/cross-rs/cross/pkgs/container/x86_64-pc-windows-gnu</code></p></li><li><p>发现镜像的<code>tag</code>列表当中存在<code>edge</code>或者<code>main</code>，镜像很新，对应的是<code>main</code>分支的镜像，一般使用这种<code>tag</code>的镜像基本可以解决<code>99%</code>的<code>GLIBC</code>版本找不到的问题，虽然不是<code>release</code>版本的<code>tag</code>，但是<code>rust</code>的程序只要可以成功编译出来，就基本不用有什么执行问题的，可以放心使用</p></li><li><p>在项目根目录下面（与<code>Cargo.toml</code>同级）创建一个文件<code>Cross.toml</code>写入如下</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">target</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">x86_64-pc-windows-gnu</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">image = </span><span style="color:#9ECBFF;">&quot;ghcr.io/cross-rs/x86_64-pc-windows-gnu:edge&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">target</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">x86_64-pc-windows-gnu</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">image = </span><span style="color:#032F62;">&quot;ghcr.io/cross-rs/x86_64-pc-windows-gnu:edge&quot;</span></span></code></pre></div></li><li><p>之后再次执行编译就会使用最新的<code>edge</code>镜像了</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">x86_64-pc-windows-gnu</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">x86_64-pc-windows-gnu</span></span></code></pre></div></li></ul><h2 id="交叉编译苹果系列" tabindex="-1">交叉编译苹果系列 <a class="header-anchor" href="#交叉编译苹果系列" aria-label="Permalink to &quot;交叉编译苹果系列&quot;">​</a></h2><p>下面采用<code>target aarch64-apple-darwin</code>作为示范</p><h4 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-label="Permalink to &quot;原因&quot;">​</a></h4><p>出于版权原因，<code>cross</code>项目未提供<code>ios/darwin</code>相关的容器镜像，所以需要自己构建镜像</p><p>版权说明查看地址<code>https://github.com/cross-rs/cross-toolchains#apple-targets</code></p><p><code>cross</code>还是提供了部分<code>macos/apple</code>相关的镜像制作的代码，后续所有操作版权问题要自己负责</p><p><code>clone</code>项目</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/cross-rs/cross</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--remote</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/cross-rs/cross</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--remote</span></span></code></pre></div><h4 id="其他依赖的仓库" tabindex="-1">其他依赖的仓库 <a class="header-anchor" href="#其他依赖的仓库" aria-label="Permalink to &quot;其他依赖的仓库&quot;">​</a></h4><p><code>cross</code>的打包编译苹果的时候需要使用到如下仓库，用来生成<code>macos cross toolchain</code>和其他一些操作， 该仓库仅作了解</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/tpoechtrager/osxcross</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/tpoechtrager/osxcross</span></span></code></pre></div><p>交叉编译的时候需要传递<code>docker build-arg</code>参数，<code>MACOS_SDK_DIR和MACOS_SDK_FILE</code> 或者传递一个单独的<code>MACOS_SDK_URL</code>参数，该参数是苹果的构建包数据信息，这个时候可以选择自己整台<code>MACOS</code>去获取<code>MACOS_SDK</code>包，也可以通过第三方仓库获取<code>Macos-sdk</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/phracker/MacOSX-SDKs</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/phracker/MacOSX-SDKs</span></span></code></pre></div><p>在仓库的<code>release</code>下查找打包好的<code>sdk</code>，下面我会使用<code>macos-11.1-sdk</code>作为<code>MACOS_SDK_URL</code>的参数</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/phracker/MacOSX-SDKs/releases/download/11.0-11.1/MacOSX11.1.sdk.tar.xz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/phracker/MacOSX-SDKs/releases/download/11.0-11.1/MacOSX11.1.sdk.tar.xz</span></span></code></pre></div><h4 id="修改dockerfile" tabindex="-1">修改<code>dockerfile</code> <a class="header-anchor" href="#修改dockerfile" aria-label="Permalink to &quot;修改\`dockerfile\`&quot;">​</a></h4><p>进入到刚刚的<code>cross</code>仓库下面，找到文件<code>docker/cross-toolchains/docker/Dockerfile.x86_64-apple-darwin-cross</code></p><p>由于镜像构建过程中会有大量的<code>git clone, curl</code>等网络操作，国内环境需要配置一下代理，在<code>FROM</code>下面一行增加代理信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ENV HTTP_PROXY=http://*****:**</span></span>
<span class="line"><span style="color:#e1e4e8;">ENV HTTPS_PROXY=http://{IP}:{端口}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ENV HTTP_PROXY=http://*****:**</span></span>
<span class="line"><span style="color:#24292e;">ENV HTTPS_PROXY=http://{IP}:{端口}</span></span></code></pre></div><p>修改<code>MACOS_SDK_URL</code>参数改为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">ARG MACOS_SDK_URL=&quot;https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">ARG MACOS_SDK_URL=&quot;https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.3.sdk.tar.xz&quot;</span></span></code></pre></div><h4 id="docker组件依赖" tabindex="-1"><code>docker</code>组件依赖 <a class="header-anchor" href="#docker组件依赖" aria-label="Permalink to &quot;\`docker\`组件依赖&quot;">​</a></h4><p>交叉编译需要使用到<code>docker buildx</code>，这个非常重要，是能够打包新<code>cross docker</code>镜像的关键，由于<code>buildx</code>还处于实验期，一直不是很稳定，所以需要配置<code>docker</code>开启该功能</p><p>修改<code>~/.docker/config.json</code>，增加一行</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FDAEB7;font-style:italic;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">&quot;experimental&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;enabled&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FDAEB7;font-style:italic;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#B31D28;font-style:italic;">...</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">&quot;experimental&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;enabled&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#B31D28;font-style:italic;">...</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>校验是否启用， 如下，<code>Experimental： true</code>表示配置成功</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version</span></span>
<span class="line"><span style="color:#B392F0;">Client:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Engine</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Community</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Version:</span><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">20.10</span><span style="color:#9ECBFF;">.17</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">API</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version:</span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;">1.41</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Go</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version:</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">go1.17.11</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit:</span><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">100</span><span style="color:#9ECBFF;">c701</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Built:</span><span style="color:#E1E4E8;">             </span><span style="color:#9ECBFF;">Mon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Jun</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">23</span><span style="color:#9ECBFF;">:02:57</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2022</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">OS/Arch:</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">linux/amd64</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Context:</span><span style="color:#E1E4E8;">           </span><span style="color:#9ECBFF;">default</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Experimental:</span><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version</span></span>
<span class="line"><span style="color:#6F42C1;">Client:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Engine</span><span style="color:#24292E;"> </span><span style="color:#032F62;">-</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Community</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Version:</span><span style="color:#24292E;">           </span><span style="color:#005CC5;">20.10</span><span style="color:#032F62;">.17</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">API</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version:</span><span style="color:#24292E;">       </span><span style="color:#005CC5;">1.41</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Go</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version:</span><span style="color:#24292E;">        </span><span style="color:#032F62;">go1.17.11</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit:</span><span style="color:#24292E;">        </span><span style="color:#005CC5;">100</span><span style="color:#032F62;">c701</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Built:</span><span style="color:#24292E;">             </span><span style="color:#032F62;">Mon</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Jun</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">6</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">23</span><span style="color:#032F62;">:02:57</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2022</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OS/Arch:</span><span style="color:#24292E;">           </span><span style="color:#032F62;">linux/amd64</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Context:</span><span style="color:#24292E;">           </span><span style="color:#032F62;">default</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Experimental:</span><span style="color:#24292E;">      </span><span style="color:#005CC5;">true</span></span></code></pre></div><p>检查<code>buildx</code>版本</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">buildx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">version</span></span>
<span class="line"><span style="color:#B392F0;">github.com/docker/buildx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v0.</span><span style="color:#79B8FF;">**</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">***********</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker</span><span style="color:#24292E;"> </span><span style="color:#032F62;">buildx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">version</span></span>
<span class="line"><span style="color:#6F42C1;">github.com/docker/buildx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v0.</span><span style="color:#005CC5;">**</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">***********</span></span></code></pre></div><p>开始构建，构建完成之后会生成一个镜像<code>aarch64-apple-darwin-cross:local</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cargo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build-docker-image</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aarch64-apple-darwin-cross</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--tag</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">local</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cargo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build-docker-image</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aarch64-apple-darwin-cross</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--tag</span><span style="color:#24292E;"> </span><span style="color:#032F62;">local</span></span></code></pre></div><p>如果遇到报错，如下，看提示和建议信息好像是说<code>buildx</code>未被安装，解决方案也是配置环境变量<code>CROSS_CONTAINER_ENGINE_NO_BUILDKIT=1</code>不使用<code>buildx</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">error: failed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code [manifests 20.04]: 403 Forbidden</span></span>
<span class="line"><span style="color:#e1e4e8;">......</span></span>
<span class="line"><span style="color:#e1e4e8;">Location:</span></span>
<span class="line"><span style="color:#e1e4e8;">   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/core/src/convert/mod.rs:727</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Warning: call to docker failed</span></span>
<span class="line"><span style="color:#e1e4e8;">Suggestion: is \`buildx\` available for the container engine?</span></span>
<span class="line"><span style="color:#e1e4e8;">Note: disable the \`buildkit\` dependency optionally with \`CROSS_CONTAINER_ENGINE_NO_BUILDKIT=1\`</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">error: failed to solve: rpc error: code = Unknown desc = failed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code [manifests 20.04]: 403 Forbidden</span></span>
<span class="line"><span style="color:#24292e;">......</span></span>
<span class="line"><span style="color:#24292e;">Location:</span></span>
<span class="line"><span style="color:#24292e;">   /rustc/90c541806f23a127002de5b4038be731ba1458ca/library/core/src/convert/mod.rs:727</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Warning: call to docker failed</span></span>
<span class="line"><span style="color:#24292e;">Suggestion: is \`buildx\` available for the container engine?</span></span>
<span class="line"><span style="color:#24292e;">Note: disable the \`buildkit\` dependency optionally with \`CROSS_CONTAINER_ENGINE_NO_BUILDKIT=1\`</span></span></code></pre></div><p>这个时候要淡定，不接受他的建议</p><p>先尝试去访问<code>buildx</code>仓库如下，获取最新的一个<code>release</code>版本</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/docker/buildx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/docker/buildx</span></span></code></pre></div><p>比如现在获取到的最新的<code>buildx</code>的下载链接</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://github.com/docker/buildx/releases/download/v0.11.0/buildx-v0.11.0.linux-amd64</span></span></code></pre></div><p>下载之后按照<code>buildx</code>仓库<code>readme</code>的提示，替换原来的<code>docker-buildx</code></p><p><code>linux</code>的<code>docker plugin</code>的可能位置有</p><ul><li><code>/usr/local/lib/docker/cli-plugins</code> OR <code>/usr/local/libexec/docker/cli-plugins</code></li><li><code>/usr/lib/docker/cli-plugins</code> OR <code>/usr/libexec/docker/cli-plugins</code></li></ul><p>像我的<code>Ubuntu22</code>机器就是执行如下命令</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo mv buildx-v0.11.0.linux-amd64 /usr/libexec/docker/cli-plugins/docker-buildx</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo chmod a+x /usr/libexec/docker/cli-plugins/docker-buildx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo mv buildx-v0.11.0.linux-amd64 /usr/libexec/docker/cli-plugins/docker-buildx</span></span>
<span class="line"><span style="color:#24292e;">$ sudo chmod a+x /usr/libexec/docker/cli-plugins/docker-buildx</span></span></code></pre></div><p>执行完成之后再检查<code>buildx</code>版本，一般<code>buildx</code>运行的时候是会遇到很多问题的，该工具也还在实验中，也一直在不断进行更新修复，所以使用最新版本大概率可以解决问题</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker buildx version</span></span>
<span class="line"><span style="color:#e1e4e8;">github.com/docker/buildx v0.11.0 687feca9e8dcd1534ac4c026bc4db5a49de0dd6e</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker buildx version</span></span>
<span class="line"><span style="color:#24292e;">github.com/docker/buildx v0.11.0 687feca9e8dcd1534ac4c026bc4db5a49de0dd6e</span></span></code></pre></div><p>最后再次执行镜像构建</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cargo build-docker-image aarch64-apple-darwin-cross --tag local</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cargo build-docker-image aarch64-apple-darwin-cross --tag local</span></span></code></pre></div><p>如果还是报错再接受建议，执行命令如下，不使用<code>buildx</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ CROSS_CONTAINER_ENGINE_NO_BUILDKIT=1 cargo build-docker-image aarch64-apple-darwin-cross --tag local</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ CROSS_CONTAINER_ENGINE_NO_BUILDKIT=1 cargo build-docker-image aarch64-apple-darwin-cross --tag local</span></span></code></pre></div><p>创建<code>Cross.toml</code></p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">target</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">aarch64-apple-darwin</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">image = </span><span style="color:#9ECBFF;">&quot;ghcr.io/cross-rs/aarch64-apple-darwin-cross:local&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">target</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">aarch64-apple-darwin</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">image = </span><span style="color:#032F62;">&quot;ghcr.io/cross-rs/aarch64-apple-darwin-cross:local&quot;</span></span></code></pre></div><p>执行命令如下就完成交叉编译了</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cross</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">aarch64-apple-darwin</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cross</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">aarch64-apple-darwin</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span></span></code></pre></div><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://github.com/cross-rs/cross" target="_blank" rel="noreferrer"><code>cross</code>官方<code>github readme</code></a></p>`,86),e=[p];function c(t,r,i,d,y,E){return a(),o("div",null,e)}const h=s(l,[["render",c]]);export{u as __pageData,h as default};
