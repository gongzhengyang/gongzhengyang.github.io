import{_ as s,o as e,c as a,Q as o}from"./chunks/framework.ec8f7e8e.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"published/Ubuntu下的docker和docker-compose安装.md","filePath":"published/Ubuntu下的docker和docker-compose安装.md"}'),n={name:"published/Ubuntu下的docker和docker-compose安装.md"},p=o(`<p>安装前依赖</p><p>添加仓库源和依赖，执行命令如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release software-properties-common</span></span>
<span class="line"><span style="color:#e1e4e8;">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release software-properties-common</span></span>
<span class="line"><span style="color:#24292e;">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span>
<span class="line"><span style="color:#24292e;">$ sudo add-apt-repository &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span></span></code></pre></div><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo apt-get update</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo apt-get update</span></span>
<span class="line"><span style="color:#24292e;">$ sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin</span></span></code></pre></div><h3 id="配置docker非root非sudo用户操作" tabindex="-1">配置<code>docker</code>非<code>root</code>非<code>sudo</code>用户操作 <a class="header-anchor" href="#配置docker非root非sudo用户操作" aria-label="Permalink to &quot;配置\`docker\`非\`root\`非\`sudo\`用户操作&quot;">​</a></h3><p>把当前非<code>root</code>用户添加到<code>docker</code>用户组，执行如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo groupadd docker</span></span>
<span class="line"><span style="color:#e1e4e8;">$ sudo gpasswd -a \${USER} docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo groupadd docker</span></span>
<span class="line"><span style="color:#24292e;">$ sudo gpasswd -a \${USER} docker</span></span></code></pre></div><p>由于当前终端<code>shell</code>还保留着旧用户信息 现在新开一个终端执行命令验证是否可以非<code>sudo</code>操作</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker info</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker info</span></span></code></pre></div><p>如果报错如下，重启机器即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock</span></span></code></pre></div><h3 id="修改docker镜像源" tabindex="-1">修改<code>docker</code>镜像源 <a class="header-anchor" href="#修改docker镜像源" aria-label="Permalink to &quot;修改\`docker\`镜像源&quot;">​</a></h3><p>镜像源地址推荐</p><ul><li><p>阿里云 <code>https://registry.cn-hangzhou.aliyuncs.com</code> 如果有账号的, 使用<code>[系统分配前缀].mirror.aliyuncs.com</code></p></li><li><p>腾讯云 <code>https://mirror.ccs.tencentyun.com</code></p></li><li><p><code>docker</code>中国 <code>https://registry.docker-cn.com</code></p></li><li><p>网易 <code>http://hub-mirror.c.163.com</code></p></li><li><p>中科大 <code>https://docker.mirrors.ustc.edu.cn</code></p></li></ul><p>编辑<code>/etc/docker/daemon.json</code>写入如下内容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">{</span></span>
<span class="line"><span style="color:#e1e4e8;">	&quot;registry-mirrors&quot;: [</span></span>
<span class="line"><span style="color:#e1e4e8;">		&quot;https://docker.mirrors.ustc.edu.cn&quot;, </span></span>
<span class="line"><span style="color:#e1e4e8;">		&quot;http://hub-mirror.c.163.com&quot;]</span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">{</span></span>
<span class="line"><span style="color:#24292e;">	&quot;registry-mirrors&quot;: [</span></span>
<span class="line"><span style="color:#24292e;">		&quot;https://docker.mirrors.ustc.edu.cn&quot;, </span></span>
<span class="line"><span style="color:#24292e;">		&quot;http://hub-mirror.c.163.com&quot;]</span></span>
<span class="line"><span style="color:#24292e;">}</span></span></code></pre></div><p>修改完成之后执行如下命令，重启服务</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo systemctl restart docker</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo systemctl restart docker</span></span></code></pre></div><p>查看修改镜像是否成功</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker info</span></span>
<span class="line"><span style="color:#e1e4e8;">#输出信息包含如下</span></span>
<span class="line"><span style="color:#e1e4e8;">...</span></span>
<span class="line"><span style="color:#e1e4e8;"> Registry Mirrors:</span></span>
<span class="line"><span style="color:#e1e4e8;">  https://docker.mirrors.ustc.edu.cn/</span></span>
<span class="line"><span style="color:#e1e4e8;">  http://hub-mirror.c.163.com/</span></span>
<span class="line"><span style="color:#e1e4e8;">....</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker info</span></span>
<span class="line"><span style="color:#24292e;">#输出信息包含如下</span></span>
<span class="line"><span style="color:#24292e;">...</span></span>
<span class="line"><span style="color:#24292e;"> Registry Mirrors:</span></span>
<span class="line"><span style="color:#24292e;">  https://docker.mirrors.ustc.edu.cn/</span></span>
<span class="line"><span style="color:#24292e;">  http://hub-mirror.c.163.com/</span></span>
<span class="line"><span style="color:#24292e;">....</span></span></code></pre></div><p>目前的<code>docker-compose</code>可以作为<code>docker</code>的<code>sub command</code>调用，这个也是目前推荐的方式 编辑一个<code>compose.yaml</code>文件</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">services</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">redis</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">redis</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    - </span><span style="color:#9ECBFF;">6379:6379</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">restart</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">always</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">services</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">redis</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">redis</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    - </span><span style="color:#032F62;">6379:6379</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">restart</span><span style="color:#24292E;">: </span><span style="color:#032F62;">always</span></span></code></pre></div><p>在<code>compose.yaml</code>文件同级路径执行命令验证之前步骤是否正确</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker compose version</span></span>
<span class="line"><span style="color:#e1e4e8;">$ docker compose up -d</span></span>
<span class="line"><span style="color:#e1e4e8;">$ docker compose ps</span></span>
<span class="line"><span style="color:#e1e4e8;">$ docker compose down</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker compose version</span></span>
<span class="line"><span style="color:#24292e;">$ docker compose up -d</span></span>
<span class="line"><span style="color:#24292e;">$ docker compose ps</span></span>
<span class="line"><span style="color:#24292e;">$ docker compose down</span></span></code></pre></div><h3 id="命令兼容" tabindex="-1">命令兼容 <a class="header-anchor" href="#命令兼容" aria-label="Permalink to &quot;命令兼容&quot;">​</a></h3><p>由于很多人之前接触的是<code>1.**</code>版本的<code>docker-compose</code>，命令也习惯使用<code>docker-compose up</code>这样的，而不是<code>docker compose up</code>，所以为了与旧版本兼容</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/bin/docker-compose</span></span></code></pre></div><p>现在可以执行两种风格的<code>compose</code>命令了</p><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://docs.docker.com/compose/production/" target="_blank" rel="noreferrer">docker官方安装文档</a></p>`,31),c=[p];function l(t,r,d,i,u,h){return e(),a("div",null,c)}const g=s(n,[["render",l]]);export{k as __pageData,g as default};
