import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.36bc40e2.js";const u=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"published/golang安装配置与docker构建.md","filePath":"published/golang安装配置与docker构建.md","lastUpdated":1700106669000}'),p={name:"published/golang安装配置与docker构建.md"},o=l(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><p>操作系统是<code>Ubuntu22 64 x86</code></p><p>访问<code>golang</code>官方文档，获取最新安装包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">https://go.dev/doc/install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">https://go.dev/doc/install</span></span></code></pre></div><p>下载与解压，目前最新的版本是<code>1.19</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ wget https://dl.google.com/go/go1.19.2.linux-amd64.tar.gz</span></span>
<span class="line"><span style="color:#e1e4e8;"># 删除旧版本go</span></span>
<span class="line"><span style="color:#e1e4e8;">$ rm -rf /usr/local/go</span></span>
<span class="line"><span style="color:#e1e4e8;">$ tar -C /usr/local -xzf go1.19.2.linux-amd64.tar.gz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ wget https://dl.google.com/go/go1.19.2.linux-amd64.tar.gz</span></span>
<span class="line"><span style="color:#24292e;"># 删除旧版本go</span></span>
<span class="line"><span style="color:#24292e;">$ rm -rf /usr/local/go</span></span>
<span class="line"><span style="color:#24292e;">$ tar -C /usr/local -xzf go1.19.2.linux-amd64.tar.gz</span></span></code></pre></div><h2 id="配置环境变量" tabindex="-1">配置环境变量 <a class="header-anchor" href="#配置环境变量" aria-label="Permalink to &quot;配置环境变量&quot;">​</a></h2><p><code>GOPATH</code></p><ul><li>表示<code>golang</code>的工作空间，包含三个子目录</li><li><code>src</code> 里面的子目录都是包，包含项目源码 <ul><li><code>src</code>下面推荐包含两级目录，<code>github.com</code>(仓库域名)以及用户名称目录，结构变成<code>src/github.com/user/project-a</code></li><li>比如<code>go get -u github.com/gin-gonic/gin</code>这样的，在用户获取一个包的时候包含域名，组织或者用户，具体的项目</li></ul></li><li><code>pkg</code> 编译后生成的，包的目标文件</li><li><code>bin</code>生成的可执行文件</li></ul><p>创建工作空间如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ mkdir $HOME/golang</span></span>
<span class="line"><span style="color:#e1e4e8;">$ cd $HOME/golang </span></span>
<span class="line"><span style="color:#e1e4e8;">$ mkdir src pkg bin</span></span>
<span class="line"><span style="color:#e1e4e8;">$ cd src</span></span>
<span class="line"><span style="color:#e1e4e8;">$ mkdir -p github.com/gong/hello-world</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ mkdir $HOME/golang</span></span>
<span class="line"><span style="color:#24292e;">$ cd $HOME/golang </span></span>
<span class="line"><span style="color:#24292e;">$ mkdir src pkg bin</span></span>
<span class="line"><span style="color:#24292e;">$ cd src</span></span>
<span class="line"><span style="color:#24292e;">$ mkdir -p github.com/gong/hello-world</span></span></code></pre></div><p><code>GOROOT</code></p><ul><li><code>golang</code>的安装目录</li></ul><p>配置环境变量，创建文件<code>/etc/profile.d/golang.sh</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOROOT</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/usr/local/go</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> PATH</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">$GOROOT</span><span style="color:#9ECBFF;">/bin:</span><span style="color:#E1E4E8;">$PATH</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> GOPATH</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">$HOME</span><span style="color:#9ECBFF;">/golang</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOROOT</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/usr/local/go</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> PATH</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">$GOROOT</span><span style="color:#032F62;">/bin:</span><span style="color:#24292E;">$PATH</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> GOPATH</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">$HOME</span><span style="color:#032F62;">/golang</span></span></code></pre></div><p>当前<code>shell</code>生效验证</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ source /etc/profile</span></span>
<span class="line"><span style="color:#e1e4e8;">$ go version</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ source /etc/profile</span></span>
<span class="line"><span style="color:#24292e;">$ go version</span></span></code></pre></div><p>配置<code>go</code>获取依赖的代理</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go env -w GOPROXY=https://goproxy.cn,direct</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go env -w GOPROXY=https://goproxy.cn,direct</span></span></code></pre></div><h2 id="hello-world" tabindex="-1"><code>Hello world</code> <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;\`Hello world\`&quot;">​</a></h2><p>用编译器打开<code>$HOME/golang/github.com/gong/hello-world</code></p><p>新建一个文件<code>main.go</code></p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">fmt</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	fmt.</span><span style="color:#79B8FF;">Println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello World!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">fmt</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	fmt.</span><span style="color:#005CC5;">Println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>编译之前需要执行一条命令，创建包的依赖文件，该文件记录了包的依赖信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go mod init</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go mod init</span></span></code></pre></div><p>更新依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go mod tidy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go mod tidy</span></span></code></pre></div><p>编译，在与<code>main.go</code>文件同级目录下执行如下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go build</span></span>
<span class="line"><span style="color:#e1e4e8;">$ ll</span></span>
<span class="line"><span style="color:#e1e4e8;">总用量 1.8M</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong   44 10月 26 17:04 go.mod</span></span>
<span class="line"><span style="color:#e1e4e8;">-rwxrwxr-x 1 gong gong 1.8M 10月 26 17:04 hello-world</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong   73 10月 26 16:59 main.go</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go build</span></span>
<span class="line"><span style="color:#24292e;">$ ll</span></span>
<span class="line"><span style="color:#24292e;">总用量 1.8M</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong   44 10月 26 17:04 go.mod</span></span>
<span class="line"><span style="color:#24292e;">-rwxrwxr-x 1 gong gong 1.8M 10月 26 17:04 hello-world</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong   73 10月 26 16:59 main.go</span></span></code></pre></div><p>可以看到生成了一个<code>hello-world</code>文件，执行如下可以打印</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ./hello-world </span></span>
<span class="line"><span style="color:#e1e4e8;">Hello World!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ./hello-world </span></span>
<span class="line"><span style="color:#24292e;">Hello World!</span></span></code></pre></div><p>或者可以直接编译运行一步到位</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go run .</span></span>
<span class="line"><span style="color:#e1e4e8;">Hello World!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go run .</span></span>
<span class="line"><span style="color:#24292e;">Hello World!</span></span></code></pre></div><h2 id="go-web" tabindex="-1"><code>go web</code> <a class="header-anchor" href="#go-web" aria-label="Permalink to &quot;\`go web\`&quot;">​</a></h2><p>采用<code>gin</code>框架进行开发</p><p>获取包</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go get -u github.com/gin-gonic/gin</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go get -u github.com/gin-gonic/gin</span></span></code></pre></div><p>修改文件<code>main.go</code>的内容</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">net/http</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#B392F0;">github.com/gin-gonic/gin</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">func</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">	r </span><span style="color:#F97583;">:=</span><span style="color:#E1E4E8;"> gin.</span><span style="color:#79B8FF;">Default</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">	r.</span><span style="color:#79B8FF;">GET</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;/ping&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">func</span><span style="color:#E1E4E8;">(c </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">gin.Context) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		c.</span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">(http.StatusOK, gin.H{</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#9ECBFF;">&quot;message&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pong&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		})</span></span>
<span class="line"><span style="color:#E1E4E8;">	})</span></span>
<span class="line"><span style="color:#E1E4E8;">	r.</span><span style="color:#79B8FF;">Run</span><span style="color:#E1E4E8;">() </span><span style="color:#6A737D;">// listen and serve on 0.0.0.0:8080 (for windows &quot;localhost:8080&quot;)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">package</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">net/http</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#032F62;">&quot;</span><span style="color:#6F42C1;">github.com/gin-gonic/gin</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">func</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">	r </span><span style="color:#D73A49;">:=</span><span style="color:#24292E;"> gin.</span><span style="color:#005CC5;">Default</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">	r.</span><span style="color:#005CC5;">GET</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;/ping&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">func</span><span style="color:#24292E;">(c </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">gin.Context) {</span></span>
<span class="line"><span style="color:#24292E;">		c.</span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">(http.StatusOK, gin.H{</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#032F62;">&quot;message&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pong&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		})</span></span>
<span class="line"><span style="color:#24292E;">	})</span></span>
<span class="line"><span style="color:#24292E;">	r.</span><span style="color:#005CC5;">Run</span><span style="color:#24292E;">() </span><span style="color:#6A737D;">// listen and serve on 0.0.0.0:8080 (for windows &quot;localhost:8080&quot;)</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>执行命令更新依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go mod tidy</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go mod tidy</span></span></code></pre></div><p>去查看<code>go.mod</code>文件的时候发现文件内容已经发生变化</p><p>启动<code>web</code>项目</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ go run .</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ go run .</span></span></code></pre></div><p>这时候可以使用浏览器访问地址<code>http://127.0.0.1:8080/ping</code>测试返回数据</p><h2 id="打包编译为docker" tabindex="-1">打包编译为<code>docker</code> <a class="header-anchor" href="#打包编译为docker" aria-label="Permalink to &quot;打包编译为\`docker\`&quot;">​</a></h2><p>在与<code>main.go</code>创建文件<code>Dockerfile</code></p><p>由于是编译型语言，适合采用分阶段构建，达到最小镜像</p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> golang:1.19-alpine </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">WORKDIR</span><span style="color:#E1E4E8;"> /work</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> sed -i </span><span style="color:#9ECBFF;">&#39;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&#39;</span><span style="color:#E1E4E8;"> /etc/apk/repositories \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  &amp;&amp; go env -w GOPROXY=https://goproxy.cn,direct \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  &amp;&amp; apk update \\</span></span>
<span class="line"><span style="color:#E1E4E8;">  &amp;&amp; apk add tzdata</span></span>
<span class="line"><span style="color:#F97583;">ADD</span><span style="color:#E1E4E8;"> go.mod .</span></span>
<span class="line"><span style="color:#F97583;">ADD</span><span style="color:#E1E4E8;"> go.sum .</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> go mod download</span></span>
<span class="line"><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;"> . .</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> go build -o web</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">FROM</span><span style="color:#E1E4E8;"> alpine:3.16</span></span>
<span class="line"><span style="color:#F97583;">WORKDIR</span><span style="color:#E1E4E8;"> /work</span></span>
<span class="line"><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;"> --from=builder /work/web .</span></span>
<span class="line"><span style="color:#F97583;">COPY</span><span style="color:#E1E4E8;"> --from=builder /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span>
<span class="line"><span style="color:#F97583;">RUN</span><span style="color:#E1E4E8;"> chmod +x web</span></span>
<span class="line"><span style="color:#F97583;">ENTRYPOINT</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;./web&quot;</span><span style="color:#E1E4E8;">]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> golang:1.19-alpine </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">WORKDIR</span><span style="color:#24292E;"> /work</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> sed -i </span><span style="color:#032F62;">&#39;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&#39;</span><span style="color:#24292E;"> /etc/apk/repositories \\</span></span>
<span class="line"><span style="color:#24292E;">  &amp;&amp; go env -w GOPROXY=https://goproxy.cn,direct \\</span></span>
<span class="line"><span style="color:#24292E;">  &amp;&amp; apk update \\</span></span>
<span class="line"><span style="color:#24292E;">  &amp;&amp; apk add tzdata</span></span>
<span class="line"><span style="color:#D73A49;">ADD</span><span style="color:#24292E;"> go.mod .</span></span>
<span class="line"><span style="color:#D73A49;">ADD</span><span style="color:#24292E;"> go.sum .</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> go mod download</span></span>
<span class="line"><span style="color:#D73A49;">COPY</span><span style="color:#24292E;"> . .</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> go build -o web</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">FROM</span><span style="color:#24292E;"> alpine:3.16</span></span>
<span class="line"><span style="color:#D73A49;">WORKDIR</span><span style="color:#24292E;"> /work</span></span>
<span class="line"><span style="color:#D73A49;">COPY</span><span style="color:#24292E;"> --from=builder /work/web .</span></span>
<span class="line"><span style="color:#D73A49;">COPY</span><span style="color:#24292E;"> --from=builder /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span>
<span class="line"><span style="color:#D73A49;">RUN</span><span style="color:#24292E;"> chmod +x web</span></span>
<span class="line"><span style="color:#D73A49;">ENTRYPOINT</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;./web&quot;</span><span style="color:#24292E;">]</span></span></code></pre></div><p>创建镜像如下，镜像名称为<code>web</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker build -t web .</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker build -t web .</span></span></code></pre></div><p>查看镜像大小</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker images |grep web</span></span>
<span class="line"><span style="color:#e1e4e8;">web                   latest        259944109b18   About an hour ago   26.5MB</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker images |grep web</span></span>
<span class="line"><span style="color:#24292e;">web                   latest        259944109b18   About an hour ago   26.5MB</span></span></code></pre></div><p>创建<code>compose.yaml</code>文件写入如下</p><p>需要传入<code>gin</code>的环境变量使得<code>gin</code>以发布形式运行，提高性能</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">services</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">web</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">web</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">container_name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">web</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">&quot;8080:8080&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">restart</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">always</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">environment</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">GIN_MODE=release</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">services</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">web</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">web</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">container_name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">web</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">&quot;8080:8080&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">restart</span><span style="color:#24292E;">: </span><span style="color:#032F62;">always</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">environment</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      - </span><span style="color:#032F62;">GIN_MODE=release</span></span></code></pre></div><p>现在项目下面文件如下，其中<code>go.mod</code>和<code>go.sum</code>是运行<code>go mod</code>命令自动管理生成的库依赖相关文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ ll</span></span>
<span class="line"><span style="color:#e1e4e8;">总用量 36K</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong  148 10月 26 17:50 compose.yaml</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong  468 10月 26 17:42 Dockerfile</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong 2.9K 10月 26 17:38 go.mod</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong  19K 10月 26 17:38 go.sum</span></span>
<span class="line"><span style="color:#e1e4e8;">-rw-rw-r-- 1 gong gong  280 10月 26 17:27 main.go</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ ll</span></span>
<span class="line"><span style="color:#24292e;">总用量 36K</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong  148 10月 26 17:50 compose.yaml</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong  468 10月 26 17:42 Dockerfile</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong 2.9K 10月 26 17:38 go.mod</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong  19K 10月 26 17:38 go.sum</span></span>
<span class="line"><span style="color:#24292e;">-rw-rw-r-- 1 gong gong  280 10月 26 17:27 main.go</span></span></code></pre></div><p>启动服务，访问<code>http://127.0.0.1:8080</code>测试一下</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ docker compose up -d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ docker compose up -d</span></span></code></pre></div><h2 id="参考阅读" tabindex="-1">参考阅读 <a class="header-anchor" href="#参考阅读" aria-label="Permalink to &quot;参考阅读&quot;">​</a></h2><p><a href="https://go.dev/doc/install" target="_blank" rel="noreferrer"><code>golang</code>官方文档</a></p><p><a href="https://gin-gonic.com/" target="_blank" rel="noreferrer"><code>gin</code>官方文档</a></p>`,63),e=[o];function c(t,r,i,d,y,g){return a(),n("div",null,e)}const h=s(p,[["render",c]]);export{u as __pageData,h as default};
